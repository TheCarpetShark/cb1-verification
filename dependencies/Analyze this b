xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(68,29): warning C4244: 'initializing': conversion
from 'llama_pos' to 'const float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244: '=': conversion from 'doubl
e' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         with [D:\NEURAL_COR
E\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         [ [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:             _Ty=float [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         ] [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(145,36): warning C4244: '=': conversion from 'int6
4_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(218,51): warning C4244: '=': conversion from 'int6
4_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244: '=': conversion from 'int6
4_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         with [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         [ [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:             _Ty=llama_toke
n [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         ] [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(348,60): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(348,42): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(352,68): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(352,50): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(358,49): warning C4244: '=': conversion from 'int'
 to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(387,60): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(387,42): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(391,68): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(391,50): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(397,49): warning C4244: '=': conversion from 'int'
 to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(409,36): warning C4244: 'initializing': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(466,37): warning C4244: '=': conversion from 'int'
 to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(497,28): warning C4244: 'initializing': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(506,28): warning C4244: 'initializing': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(540,24): warning C4244: 'initializing': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(876,72): warning C4244: 'argument': conversion fro
m 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1499,27): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1499,25): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1606,35): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  llama-hparams.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  (compiling source file '../../src/llama-hparams.cpp')

  llama-impl.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-impl.cpp(141,27): warning C4267: 'initializing': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  llama-io.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-io.cpp(4,23): warning C4267: 'initializing': conversion from
 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
  llama-kv-cache.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  (compiling source file '../../src/llama-kv-cache.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(128,39): warning C4267: '+=': conversion from '
size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(670,29): warning C4244: '=': conversion from '_
_int64' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(966,47): warning C4267: 'initializing': convers
ion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(966,38): warning C4267: 'initializing': convers
ion from 'size_t' to 'const uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1040,54): warning C4267: 'initializing': conver
sion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1040,38): warning C4267: 'initializing': conver
sion from 'size_t' to 'const uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\s
rc\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1177,20): warning C4805: '!=': unsafe mix of ty
pe 'uint32_t' and type 'bool' in operation [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1340,24): warning C4267: '+=': conversion from
'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1370,38): warning C4267: '=': conversion from '
size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  llama-memory.cpp
  llama-mmap.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-mmap.cpp(117,89): warning C4267: 'argument': conversion from
 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-mmap.cpp(140,99): warning C4267: 'argument': conversion from
 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  llama-model-loader.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  (compiling source file '../../src/llama-model-loader.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conver
sion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  (compiling source file '../../src/llama-model-loader.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(536,46): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(536,31): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(575,30): warning C4244: '=': conversion fro
m 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(576,33): warning C4267: '=': conversion fro
m 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,42): warning C4244: 'argument': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,42):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(562,9):
          see reference to function template instantiation 'bool llama_model_loader::get_key<int>(const std::string &,T
   &,bool)' being compiled
          with
          [
              T=int
          ]
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,46):
          see reference to class template instantiation 'GGUFMeta::GKV<T>' being compiled
          with
          [
              T=int
          ]
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(251,21):
          while compiling class template member function 'bool GGUFMeta::GKV<T>::set(const gguf_context *,const char *,
  T &,const llama_model_kv_override *)'
          with
          [
              T=int
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(256,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=int
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,26):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'llama_model_loader::get_key'
          with
          [
              T=int
          ]

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(264,38): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(264,38):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(287,39):
          see reference to function template instantiation 'bool llama_model_loader::get_arr_n<uint32_t>(llm_kv,uint32_
  t &,bool)' being compiled
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(284,16):
          see reference to function template instantiation 'bool llama_model_loader::get_arr_n<T>(const std::string &,T
   &,bool)' being compiled
          with
          [
              T=uint32_t
          ]

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(264,23): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267: '=': conversion fro
m 'size_t' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:             T=uint3
2_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(396,38): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(396,38):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(440,39):
          see reference to function template instantiation 'bool llama_model_loader::get_key_or_arr<std::array<int,4>>(
  llm_kv,std::array<int,4> &,uint32_t,bool)' being compiled
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(436,16):
          see reference to function template instantiation 'bool llama_model_loader::get_key_or_arr<int,4>(const std::s
  tring &,std::array<int,4> &,uint32_t,bool)' being compiled

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(396,23): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion fro
m 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(242,21):
          while compiling class template member function 'bool GGUFMeta::GKV<T>::set(const gguf_context *,const int,T &
  ,const llama_model_kv_override *)'
          with
          [
              T=int
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=int
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(256,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=int
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,26):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'llama_model_loader::get_key'
          with
          [
              T=int
          ]
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(243,17):
          see reference to function template instantiation 'bool GGUFMeta::GKV<T>::try_override<T>(OT &,const llama_mod
  el_kv_override *)' being compiled
          with
          [
              T=int,
              OT=int
          ]

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion fro
m 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=uint
16_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(242,21):
          while compiling class template member function 'bool GGUFMeta::GKV<T>::set(const gguf_context *,const int,T &
  ,const llama_model_kv_override *)'
          with
          [
              T=uint16_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=uint16_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(256,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=uint16_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,26):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'llama_model_loader::get_key'
          with
          [
              T=uint16_t
          ]
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(243,17):
          see reference to function template instantiation 'bool GGUFMeta::GKV<T>::try_override<T>(OT &,const llama_mod
  el_kv_override *)' being compiled
          with
          [
              T=uint16_t,
              OT=uint16_t
          ]

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(320,38): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(320,38):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(436,16):
          see reference to function template instantiation 'bool llama_model_loader::get_key_or_arr<int,4>(const std::s
  tring &,std::array<int,4> &,uint32_t,bool)' being compiled
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(417,20):
          see reference to function template instantiation 'bool llama_model_loader::get_arr<int,4>(const std::string &
  ,std::array<int,4> &,bool)' being compiled

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(320,23): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion fro
m 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=uint
32_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(242,21):
          while compiling class template member function 'bool GGUFMeta::GKV<T>::set(const gguf_context *,const int,T &
  ,const llama_model_kv_override *)'
          with
          [
              T=uint32_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=uint32_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(256,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=uint32_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,26):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'llama_model_loader::get_key'
          with
          [
              T=uint32_t
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(373,16):
              see the first reference to 'llama_model_loader::get_key' in 'llama_model_loader::get_key'
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(243,17):
          see reference to function template instantiation 'bool GGUFMeta::GKV<T>::try_override<T>(OT &,const llama_mod
  el_kv_override *)' being compiled
          with
          [
              T=uint32_t,
              OT=uint32_t
          ]

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244: '=': conversion fro
m 'const double' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:             T=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(242,21):
          while compiling class template member function 'bool GGUFMeta::GKV<T>::set(const gguf_context *,const int,T &
  ,const llama_model_kv_override *)'
          with
          [
              T=float
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=float
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(256,13):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'GGUFMeta::GKV<T>::set'
          with
          [
              T=float
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(362,26):
              see the first reference to 'GGUFMeta::GKV<T>::set' in 'llama_model_loader::get_key'
          with
          [
              T=float
          ]
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(373,16):
              see the first reference to 'llama_model_loader::get_key' in 'llama_model_loader::get_key'
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(243,17):
          see reference to function template instantiation 'bool GGUFMeta::GKV<T>::try_override<T>(T &,const llama_mode
  l_kv_override *)' being compiled
          with
          [
              T=float
          ]

  llama-model.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  (compiling source file '../../src/llama-model.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  (compiling source file '../../src/llama-model.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conver
sion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  (compiling source file '../../src/llama-model.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(337,61): warning C4267: 'argument': conversion fro
m 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1368,38): warning C4305: '=': truncation from 'dou
ble' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(795,17): warning C4065: switch statement contains
'default' but no 'case' labels [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(804,17): warning C4065: switch statement contains
'default' but no 'case' labels [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244: '=': conversion from 'siz
e_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         with [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         [ [D:\NEURAL_CORE
\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:             _Ty=float [D:
\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         ] [D:\NEURAL_CORE
\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1475,134): warning C4244: 'initializing': conversi
on from '__int64' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1475,29): warning C4244: 'initializing': conversio
n from '__int64' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1575,48): warning C4101: 'e': unreferenced local v
ariable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3626,50): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3626,48): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3683,50): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3683,48): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3742,50): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3742,48): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3809,50): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3809,48): warning C4244: 'initializing': conversio
n from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3840,54): warning C4101: 'e': unreferenced local v
ariable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4459,120): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4490,29): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4496,29): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4684,120): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4714,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4720,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4851,33): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4856,33): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4971,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4977,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5096,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5102,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5226,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5232,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5377,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5383,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5743,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5749,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6148,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6154,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6271,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6277,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6391,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6397,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6512,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6518,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6639,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6645,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6789,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6798,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6910,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6919,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7049,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7055,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7144,120): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7179,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7185,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7317,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7323,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7540,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7546,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7669,17): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7675,17): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7796,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7802,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7896,116): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7987,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7996,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8089,45): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8122,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8127,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8205,45): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8238,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8243,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8344,49): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8385,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8393,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8526,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8532,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8689,39): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8693,39): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8853,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8867,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8964,120): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8995,29): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9001,29): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9127,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9133,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9247,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9253,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9380,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9386,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9513,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9519,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9627,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9633,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9777,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9783,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9902,120): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9932,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9938,25): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10129,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10135,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10362,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10368,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10888,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10894,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11021,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11027,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11165,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11171,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11266,120): warning C4244: 'argument': conversion
from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11296,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11302,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11538,81): warning C4244: 'argument': conversion f
rom 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11841,68): warning C4305: 'argument': truncation f
rom 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11875,37): warning C4305: 'argument': truncation f
rom 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12198,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12204,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12549,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12557,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12647,120): warning C4244: 'argument': conversion
from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12677,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12683,25): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  llama-quant.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  (compiling source file '../../src/llama-quant.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  (compiling source file '../../src/llama-quant.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conver
sion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  (compiling source file '../../src/llama-quant.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(586,57): warning C4244: 'argument': conversion fro
m 'const double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(588,57): warning C4244: 'argument': conversion fro
m 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(638,30): warning C4244: 'initializing': conversion
 from '__int64' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(681,85): warning C4267: 'argument': conversion fro
m 'size_t' to 'uint16_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(902,143): warning C4244: 'argument': conversion fr
om 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\type_traits(1706,98): warning
 C4244: 'argument': conversion from 'unsigned __int64' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\depen
dencies\llama.cpp\build\src\llama.vcxproj]
  (compiling source file '../../src/llama-quant.cpp')
      C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\type_traits(1706,98):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(121,17):
          see reference to function template instantiation 'std::thread &std::vector<std::thread,std::allocator<std::th
  read>>::emplace_back<llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,uint8_t*,flo
  at*,size_t&>(llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &,ggml_type &,uint8_t *&&,float
  *&&,size_t &)' being compiled
              D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(121,29):
              see the first reference to 'std::vector<std::thread,std::allocator<std::thread>>::emplace_back' in 'llama
  _tensor_dequantize_impl'
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(909,24):
          see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_one_at_
  back<llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,unsigned char*,float*,size_t
  &>(llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &,ggml_type &,unsigned char *&&,float *&&,
  size_t &)' being compiled
          with
          [
              _Ty=std::thread
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(830,20):
          see reference to function template instantiation '_Ty &std::vector<_Ty,std::allocator<_Ty>>::_Emplace_back_wi
  th_unused_capacity<llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,unsigned char*
  ,float*,size_t&>(llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &,ggml_type &,unsigned char
  *&&,float *&&,size_t &)' being compiled
          with
          [
              _Ty=std::thread
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\vector(848,27):
          see reference to function template instantiation 'void std::_Default_allocator_traits<_Alloc>::construct<_Ty,
  llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,unsigned char*,float*,size_t&>(_A
  lloc &,_Objty *const ,llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &,ggml_type &,unsigned
  char *&&,float *&&,size_t &)' being compiled
          with
          [
              _Alloc=std::allocator<std::thread>,
              _Ty=std::thread,
              _Objty=std::thread
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\xmemory(732,82):
          see reference to function template instantiation 'std::thread::thread<llama_tensor_dequantize_impl::<lambda_9
  9809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,_T,float*,size_t&,0>(_Fn,ggml_type &,_T &&,float *&&,size_t &)' being co
  mpiled
          with
          [
              _T=uint8_t *,
              _Fn=llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\thread(93,9):
          see reference to function template instantiation 'void std::thread::_Start<llama_tensor_dequantize_impl::<lam
  bda_99809f70a3686e6322ff64c5ea2ca728>&,ggml_type&,_Ty,float*,size_t&>(_Fn,ggml_type &,_Ty &&,float *&&,size_t &)' bei
  ng compiled
          with
          [
              _Ty=uint8_t *,
              _Fn=llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728> &
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\thread(76,40):
          see reference to function template instantiation 'unsigned int (__cdecl *std::thread::_Get_invoke<std::thread
  ::_Start::_Tuple,0,1,2,3,4>(std::integer_sequence<size_t,0,1,2,3,4>) noexcept)(void *) noexcept' being compiled
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\thread(67,17):
          see reference to function template instantiation 'unsigned int std::thread::_Invoke<_Tuple,0,1,2,3,4>(void *)
   noexcept' being compiled
          with
          [
              _Tuple=std::thread::_Start::_Tuple
          ]
          C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\thread(60,14):
          see reference to function template instantiation 'void std::invoke<llama_tensor_dequantize_impl::<lambda_9980
  9f70a3686e6322ff64c5ea2ca728>,ggml_type,uint8_t*,float*,unsigned __int64>(_Callable &&,_Ty1 &&,uint8_t *&&,float *&&,
  unsigned __int64 &&) noexcept(false)' being compiled
          with
          [
              _Callable=llama_tensor_dequantize_impl::<lambda_99809f70a3686e6322ff64c5ea2ca728>,
              _Ty1=ggml_type
          ]

  llama-sampling.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(235,18): warning C4267: '=': conversion from 's
ize_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(524,28): warning C4267: 'return': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1064,32): warning C4244: '=': conversion from '
double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1069,33): warning C4244: '/=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1150,24): warning C4267: '=': conversion from '
size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1249,68): warning C4244: 'argument': conversion
 from 'const int32_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1766,19): warning C4244: '+=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2053,38): warning C4244: '=': conversion from '
float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2076,31): warning C4244: 'initializing': conver
sion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2250,76): warning C4267: 'argument': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2364,103): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2367,103): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2371,103): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2374,103): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2380,25): warning C4267: 'initializing': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2381,25): warning C4267: 'initializing': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2445,16): warning C4244: '=': conversion from '
double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  llama-vocab.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  (compiling source file '../../src/llama-vocab.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conver
sion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  (compiling source file '../../src/llama-vocab.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(543,82): warning C4267: '=': conversion from 'size
_t' to 'llm_symbol::index', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(546,61): warning C4267: '=': conversion from 'size
_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(638,37): warning C4267: 'initializing': conversion
 from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(638,25): warning C4267: 'initializing': conversion
 from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1419,52): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1419,37): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1424,48): warning C4267: 'initializing': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1424,32): warning C4267: 'initializing': conversio
n from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1460,66): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1460,51): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1669,40): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1669,25): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1675,40): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1675,25): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1681,42): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1681,27): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1686,23): warning C4267: 'initializing': conversio
n from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2152,26): warning C4244: 'return': conversion from
 'long' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2322,74): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2325,70): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(3019,20): warning C4267: 'return': conversion from
 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  unicode-data.cpp
  Generating Code...
  Compiling...
  unicode.cpp
  Generating Code...
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama.dll" /INCREMENTAL:NO /NOLOGO
  /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\ggml\src\Release\ggml.lib "..\ggml\src
  \Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib
   user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /M
  ANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cp
  p/build/bin/Release/llama.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/
  dependencies/llama.cpp/build/src/Release/llama.lib" /MACHINE:X64  /machine:x64 /DLL llama.dir\Release\llama.obj
  "llama.dir\Release\llama-adapter.obj"
  "llama.dir\Release\llama-arch.obj"
  "llama.dir\Release\llama-batch.obj"
  "llama.dir\Release\llama-chat.obj"
  "llama.dir\Release\llama-context.obj"
  "llama.dir\Release\llama-grammar.obj"
  "llama.dir\Release\llama-graph.obj"
  "llama.dir\Release\llama-hparams.obj"
  "llama.dir\Release\llama-impl.obj"
  "llama.dir\Release\llama-io.obj"
  "llama.dir\Release\llama-kv-cache.obj"
  "llama.dir\Release\llama-memory.obj"
  "llama.dir\Release\llama-mmap.obj"
  "llama.dir\Release\llama-model-loader.obj"
  "llama.dir\Release\llama-model.obj"
  "llama.dir\Release\llama-quant.obj"
  "llama.dir\Release\llama-sampling.obj"
  "llama.dir\Release\llama-vocab.obj"
  "llama.dir\Release\unicode-data.obj"
  llama.dir\Release\unicode.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/src/Release/llama.lib and object D:/NEURAL
  _CORE/auryn_core/dependencies/llama.cpp/build/src/Release/llama.exp
  llama.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama.dll
FinalizeBuildStatus:
  Deleting file "llama.dir\Release\llama.tlog\unsuccessfulbuild".
  Touching "llama.dir\Release\llama.tlog\llama.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj" (default targets).

PrepareForBuild:
  Creating directory "llava.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llava.dir\Release\llava.tlog\".
InitializeBuildStatus:
  Creating "llava.dir\Release\llava.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llava.dir\Release\llava.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\
  . /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_core\dependencies\ll
  ama.cpp\examples\llava\..\..\common /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /I"C
  :\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MB
  CS /D WIN32 /D _WINDOWS /D NDEBUG /D LLAMA_SHARED /D LLAMA_BUILD /D _CRT_SECURE_NO_WARNINGS /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"llava.dir\Release\\" /Fd"llava.dir\Release\llava.pdb" /external:W3 /Gd /TP /e
  rrorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp D:\NEURAL_
  CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp
  llava.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(280,63): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(280,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(281,63): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(281,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(289,80): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(309,63): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(309,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(310,63): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(310,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(311,80): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(330,58): warning C4267: '=': conversion from
'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(331,58): warning C4267: '=': conversion from
'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(360,80): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(401,24): warning C4244: 'initializing': conve
rsion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  clip.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  (compiling source file '../../../examples/llava/clip.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(354,95): warning C4267: 'argument': conversion
 from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,41): warning C4244: 'initializing': conver
sion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,35): warning C4244: 'initializing': conver
sion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,43): warning C4244: 'initializing': conver
sion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,37): warning C4244: 'initializing': conver
sion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,45): warning C4267: 'initializing': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,26): warning C4267: 'initializing': conver
sion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,149): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,130): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,111): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,92): warning C4244: 'argument': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,23): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,43): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,149): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,130): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,111): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,92): warning C4244: 'argument': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,23): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,43): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,49): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,29): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1201,30): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1202,30): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1546,15): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1674,48): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1770,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1771,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1772,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1775,49): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1776,44): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1777,64): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1785,49): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1786,44): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1787,64): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244: 'initializing': conve
rsion from 'const _Ty' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244: 'initializing': conve
rsion from 'const _Ty' to 'const uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244: '=': conversion from
'float' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:             _Ty=uint8
_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,34): warning C4244: 'initializing': conve
rsion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,28): warning C4244: 'initializing': conve
rsion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2139,25): warning C4244: 'initializing': conve
rsion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2186,16): warning C4244: 'initializing': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2187,16): warning C4244: 'initializing': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2340,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2341,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244: '=': conversion from
'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2367,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2368,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2446,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2518,48): warning C4244: '=': conversion from
'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2521,48): warning C4244: '=': conversion from
'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2643,20): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,45): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,25): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2787,68): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2790,56): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2793,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2796,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2810,56): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2813,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2816,55): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\l
lava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5): warning C4297: 'clip_n_mmproj_embd':
function assumed not to throw an exception but does [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llava.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5):
      __declspec(nothrow), throw(), noexcept(true), or noexcept was specified on the function

  Generating Code...
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"llava
  .dir\Release\llava.lib" /NOLOGO /MACHINE:X64  /machine:x64 llava.dir\Release\llava.obj
  llava.dir\Release\clip.obj
  llava.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.lib
FinalizeBuildStatus:
  Deleting file "llava.dir\Release\llava.tlog\unsuccessfulbuild".
  Touching "llava.dir\Release\llava.tlog\llava.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default ta
rgets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj" (10) on node 1 (default targets).
PrepareForBuild:
  Creating directory "mtmd.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "mtmd.dir\Release\mtmd.tlog\".
InitializeBuildStatus:
  Creating "mtmd.dir\Release\mtmd.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "mtmd.dir\Release\mtmd.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\
  . /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_core\dependencies\ll
  ama.cpp\examples\llava\..\..\common /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /I"C
  :\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MB
  CS /D WIN32 /D _WINDOWS /D NDEBUG /D LLAMA_SHARED /D LLAMA_BUILD /D _CRT_SECURE_NO_WARNINGS /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"mtmd.dir\Release\\" /Fd"mtmd.dir\Release\mtmd.pdb" /external:W3 /Gd /TP /erro
  rReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp D:\NEURAL_CORE
  \auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp
  mtmd.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  (compiling source file '../../../examples/llava/mtmd.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(84,18): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(86,92): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(86,62): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(89,97): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(89,67): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(276,57): warning C4267: '=': conversion from '
size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(312,30): warning C4267: 'initializing': conver
sion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  clip.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  (compiling source file '../../../examples/llava/clip.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(354,95): warning C4267: 'argument': conversion
 from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,41): warning C4244: 'initializing': conver
sion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,35): warning C4244: 'initializing': conver
sion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,43): warning C4244: 'initializing': conver
sion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,37): warning C4244: 'initializing': conver
sion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,45): warning C4267: 'initializing': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,26): warning C4267: 'initializing': conver
sion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,149): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,130): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,111): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,92): warning C4244: 'argument': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,23): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,43): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,149): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,130): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,111): warning C4244: 'argument': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,92): warning C4244: 'argument': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,23): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,43): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,49): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,29): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1201,30): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1202,30): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,36): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,21): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1546,15): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1674,48): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\
mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1770,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1771,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1772,107): warning C4244: '=': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1775,49): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1776,44): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1777,64): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1785,49): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1786,44): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1787,64): warning C4244: '=': conversion from
'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244: 'initializing': conve
rsion from 'const _Ty' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244: 'initializing': conve
rsion from 'const _Ty' to 'const uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244: '=': conversion from
'float' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcx
proj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:             _Ty=uint8
_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,34): warning C4244: 'initializing': conve
rsion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,28): warning C4244: 'initializing': conve
rsion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2139,25): warning C4244: 'initializing': conve
rsion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2186,16): warning C4244: 'initializing': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2187,16): warning C4244: 'initializing': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2340,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2341,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244: '=': conversion from
'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2367,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2368,11): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2446,20): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2518,48): warning C4244: '=': conversion from
'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2521,48): warning C4244: '=': conversion from
'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2643,20): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,45): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,25): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2787,68): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2790,56): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2793,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2796,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2810,56): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2813,46): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2816,55): warning C4244: 'return': conversion
from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\m
tmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5): warning C4297: 'clip_n_mmproj_embd':
function assumed not to throw an exception but does [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5):
      __declspec(nothrow), throw(), noexcept(true), or noexcept was specified on the function

  Generating Code...
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"mtmd.
  dir\Release\mtmd.lib" /NOLOGO /MACHINE:X64  /machine:x64 mtmd.dir\Release\mtmd.obj
  mtmd.dir\Release\clip.obj
  mtmd.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\mtmd.lib
FinalizeBuildStatus:
  Deleting file "mtmd.dir\Release\mtmd.tlog\unsuccessfulbuild".
  Touching "mtmd.dir\Release\mtmd.tlog\mtmd.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj" (default tar
gets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf-hash\sha1.vcxproj" (11) on node 1 (default targets).
PrepareForBuild:
  Creating directory "sha1.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "sha1.dir\Release\sha1.tlog\".
InitializeBuildStatus:
  Creating "sha1.dir\Release\sha1.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "sha1.dir\Release\sha1.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf-hash/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /I"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-
  hash\deps" /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D "CMAKE_INTDIR=\"Release\"" /MD /GS /fp
  :precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"sha1.dir\Release\\" /Fd"sha1.dir\Release\sha1.pdb" /external:W3 /Gd
  /TC /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\deps\sha1
  \sha1.c"
  sha1.c
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"sha1.
  dir\Release\sha1.lib" /NOLOGO /MACHINE:X64  /machine:x64 sha1.dir\Release\sha1.obj
  sha1.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha1.dir\Release\sha1.lib
FinalizeBuildStatus:
  Deleting file "sha1.dir\Release\sha1.tlog\unsuccessfulbuild".
  Touching "sha1.dir\Release\sha1.tlog\sha1.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha1.vcxproj" (default
 targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf-hash\sha256.vcxproj" (12) on node 1 (default targets).
PrepareForBuild:
  Creating directory "sha256.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "sha256.dir\Release\sha256.tlog\".
InitializeBuildStatus:
  Creating "sha256.dir\Release\sha256.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "sha256.dir\Release\sha256.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf-hash/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /I"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-
  hash\deps" /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D "CMAKE_INTDIR=\"Release\"" /MD /GS /fp
  :precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"sha256.dir\Release\\" /Fd"sha256.dir\Release\sha256.pdb" /external:W
  3 /Gd /TC /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\dep
  s\sha256\sha256.c"
  sha256.c
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"sha25
  6.dir\Release\sha256.lib" /NOLOGO /MACHINE:X64  /machine:x64 sha256.dir\Release\sha256.obj
  sha256.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha256.dir\Release\sha256
  .lib
FinalizeBuildStatus:
  Deleting file "sha256.dir\Release\sha256.tlog\unsuccessfulbuild".
  Touching "sha256.dir\Release\sha256.tlog\sha256.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha256.vcxproj" (defau
lt targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf-hash\xxhash.vcxproj" (13) on node 1 (default targets).
PrepareForBuild:
  Creating directory "xxhash.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "xxhash.dir\Release\xxhash.tlog\".
InitializeBuildStatus:
  Creating "xxhash.dir\Release\xxhash.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "xxhash.dir\Release\xxhash.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf-hash/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /I"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-
  hash\deps" /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D "CMAKE_INTDIR=\"Release\"" /MD /GS /fp
  :precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"xxhash.dir\Release\\" /Fd"xxhash.dir\Release\xxhash.pdb" /external:W
  3 /Gd /TC /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\dep
  s\xxhash\xxhash.c"
  xxhash.c
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"xxhas
  h.dir\Release\xxhash.lib" /NOLOGO /MACHINE:X64  /machine:x64 xxhash.dir\Release\xxhash.obj
  xxhash.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\xxhash.dir\Release\xxhash
  .lib
FinalizeBuildStatus:
  Deleting file "xxhash.dir\Release\xxhash.tlog\unsuccessfulbuild".
  Touching "xxhash.dir\Release\xxhash.tlog\xxhash.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\xxhash.vcxproj" (defau
lt targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\common\common.vcxproj" (14) on node 1 (default targets).
PrepareForBuild:
  Creating directory "common.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\Release\".
  Creating directory "common.dir\Release\common.tlog\".
InitializeBuildStatus:
  Creating "common.dir\Release\common.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "common.dir\Release\common.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/common/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"common.dir\Release\\" /Fd"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
  ild\common\Release\common.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\depe
  ndencies\llama.cpp\common\arg.cpp D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp D:\NEURAL_CORE\aur
  yn_core\dependencies\llama.cpp\common\common.cpp D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\console.cpp
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp" D:\NEURAL_CORE\auryn_core\depend
  encies\llama.cpp\common\llguidance.cpp D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\log.cpp "D:\NEURAL_COR
  E\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp" D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\s
  ampling.cpp D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp
  arg.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\arg.cpp(2225,57): warning C4996: 'strdup': The POSIX name for t
his item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help for details. [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  chat.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244: 'argument': conversion
 from 'T' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj
]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         with [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         [ [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:             T=int64_t
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         ] [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  (compiling source file '../../common/chat.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\chat-template.hpp(99,41): warning C4101: 'e': unreference
d local variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  (compiling source file '../../common/chat.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1697,58): warning C4244: '+=': conversion from 'double
' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1704,134): warning C4267: 'argument': conversion from
'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1716,130): warning C4267: 'argument': conversion from
'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxp
roj]
  common.cpp
  console.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\console.cpp(256,30): warning C4267: 'initializing': conversion
from 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\console.cpp(410,28): warning C4267: 'initializing': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcx
proj]
  json-schema-to-grammar.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(136,46): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(136,37): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(151,50): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(151,41): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(231,29): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(242,33): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common
\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(513,60): warning C4101: 'e': unrefer
enced local variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  llguidance.cpp
  log.cpp
  ngram-cache.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(24,51): warning C4244: 'argument': conversion f
rom 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(104,16): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(151,34): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(151,24): warning C4267: 'initializing': convers
ion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\
common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(160,82): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(160,38): warning C4267: 'initializing': convers
ion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\
common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(174,77): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(174,38): warning C4267: 'initializing': convers
ion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\
common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(206,50): warning C4267: 'initializing': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\co
mmon.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(206,31): warning C4267: 'initializing': convers
ion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\com
mon\common.vcxproj]
  sampling.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(228,39): warning C4267: 'argument': conversion fro
m 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267: '=': conversion from 'size
_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         with [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         [ [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:             _Ty=llama_toke
n [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         ] [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  speculative.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(213,50): warning C4267: 'argument': conversion
from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(225,41): warning C4267: 'initializing': convers
ion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\
common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(225,28): warning C4267: 'initializing': convers
ion from 'size_t' to 'const llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\c
ommon\common.vcxproj]
  Generating Code...
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"D:\NE
  URAL_CORE\auryn_core\dependencies\llama.cpp\build\common\Release\common.lib" /NOLOGO /MACHINE:X64  /machine:x64 commo
  n.dir\Release\arg.obj
  common.dir\Release\chat.obj
  common.dir\Release\common.obj
  common.dir\Release\console.obj
  "common.dir\Release\json-schema-to-grammar.obj"
  common.dir\Release\llguidance.obj
  common.dir\Release\log.obj
  "common.dir\Release\ngram-cache.obj"
  common.dir\Release\sampling.obj
  common.dir\Release\speculative.obj
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\build_info.dir\Release\build-info.obj"
  common.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\Release\common.lib
FinalizeBuildStatus:
  Deleting file "common.dir\Release\common.tlog\unsuccessfulbuild".
  Touching "common.dir\Release\common.tlog\common.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\batched\llama-batched.vcxproj" (15) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-batched.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-batched.dir\Release\llama-batched.tlog\".
InitializeBuildStatus:
  Creating "llama-batched.dir\Release\llama-batched.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-batched.dir\Release\llama-batched.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/batched/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-batched.dir
  \Release\\" /Fd"llama-batched.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp
  batched.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(58,45): warning C4267: 'initializing': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\batched\llama-batched.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(58,24): warning C4267: 'initializing': co
nversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\batched\llama-batched.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(105,50): warning C4267: 'argument': conve
rsion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\batched\llama-batched.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(114,49): warning C4267: 'argument': conve
rsion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\batched\llama-batched.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\batched\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-batched.exe" /INCREMENTAL:NO
  /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib .
  .\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml
  -cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib sh
  ell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcces
  s='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-batched.pdb
  " /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/
  examples/batched/Release/llama-batched.lib" /MACHINE:X64  /machine:x64 "llama-batched.dir\Release\batched.obj"
  llama-batched.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-batched.exe
FinalizeBuildStatus:
  Deleting file "llama-batched.dir\Release\llama-batched.tlog\unsuccessfulbuild".
  Touching "llama-batched.dir\Release\llama-batched.tlog\llama-batched.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\batched\llama-batched.vcxproj" (
default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\batched-bench\llama-batched-bench.vcxproj" (16) on node 1 (default targets
).
PrepareForBuild:
  Creating directory "llama-batched-bench.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-batched-bench.dir\Release\llama-ba.12A39765.tlog\".
InitializeBuildStatus:
  Creating "llama-batched-bench.dir\Release\llama-ba.12A39765.tlog\unsuccessfulbuild" because "AlwaysCreate" was specif
  ied.
  Touching "llama-batched-bench.dir\Release\llama-ba.12A39765.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/batched-bench/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-batched-ben
  ch.dir\Release\\" /Fd"llama-batched-bench.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /big
  obj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched-bench\batched-bench.cpp"
  batched-bench.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\batched-bench\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-batched-bench.exe" /INCREMENT
  AL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common
  .lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\sr
  c\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.
  lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' u
  iAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-batch
  ed-bench.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llam
  a.cpp/build/examples/batched-bench/Release/llama-batched-bench.lib" /MACHINE:X64  /machine:x64 "llama-batched-bench.d
  ir\Release\batched-bench.obj"
  llama-batched-bench.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-batched-bench
  .exe
FinalizeBuildStatus:
  Deleting file "llama-batched-bench.dir\Release\llama-ba.12A39765.tlog\unsuccessfulbuild".
  Touching "llama-batched-bench.dir\Release\llama-ba.12A39765.tlog\llama-batched-bench.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\batched-bench\llama-batched-benc
h.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj" (17) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-bench.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-bench.dir\Release\llama-bench.tlog\".
InitializeBuildStatus:
  Creating "llama-bench.dir\Release\llama-bench.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-bench.dir\Release\llama-bench.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llama-bench/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-bench.dir\R
  elease\\" /Fd"llama-bench.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_C
  ORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp"
  llama-bench.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(1006,31): warning C4267: '=': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244: 'initializ
ing': conversion from 'double' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         wi
th [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         [
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:
  T=uint64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         ]
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
      D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14):
      the template instantiation context (the oldest one first) is
          D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(944,42):
          see reference to function template instantiation 'T stdev<uint64_t>(const std::vector<uint64_t,std::allocator
  <uint64_t>> &)' being compiled
          with
          [
              T=uint64_t
          ]

MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-bench.exe" /INCREMENTAL:NO /N
  OLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\
  ..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-c
  uda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shel
  l32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess=
  'false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-bench.pdb" /S
  UBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/exam
  ples/llama-bench/Release/llama-bench.lib" /MACHINE:X64  /machine:x64 "llama-bench.dir\Release\llama-bench.obj"
  llama-bench.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-bench.exe
FinalizeBuildStatus:
  Deleting file "llama-bench.dir\Release\llama-bench.tlog\unsuccessfulbuild".
  Touching "llama-bench.dir\Release\llama-bench.tlog\llama-bench.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\main\llama-cli.vcxproj" (18) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-cli.dir\Release\llama-cli.tlog\".
InitializeBuildStatus:
  Creating "llama-cli.dir\Release\llama-cli.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-cli.dir\Release\llama-cli.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/main/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-cli.dir\Rel
  ease\\" /Fd"llama-cli.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\a
  uryn_core\dependencies\llama.cpp\examples\main\main.cpp
  main.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\main\main.cpp(399,19): warning C4804: '>': unsafe use of type
 'bool' in operation [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\main\llama-cli.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\main\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-cli.exe" /INCREMENTAL:NO /NOL
  OGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\..
  \src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cud
  a\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell3
  2.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='f
  alse'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-cli.pdb" /SUBSY
  STEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples
  /main/Release/llama-cli.lib" /MACHINE:X64  /machine:x64 "llama-cli.dir\Release\main.obj"
  llama-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-cli.exe
FinalizeBuildStatus:
  Deleting file "llama-cli.dir\Release\llama-cli.tlog\unsuccessfulbuild".
  Touching "llama-cli.dir\Release\llama-cli.tlog\llama-cli.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\main\llama-cli.vcxproj" (default
 targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\convert-llama2c-to-ggml\llama-convert-llama2c-to-ggml.vcxproj" (19) on nod
e 1 (default targets).
PrepareForBuild:
  Creating directory "llama-convert-llama2c-to-ggml.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-convert-llama2c-to-ggml.dir\Release\llama-co.BFE8E5E9.tlog\".
InitializeBuildStatus:
  Creating "llama-convert-llama2c-to-ggml.dir\Release\llama-co.BFE8E5E9.tlog\unsuccessfulbuild" because "AlwaysCreate"
  was specified.
  Touching "llama-convert-llama2c-to-ggml.dir\Release\llama-co.BFE8E5E9.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/convert-llama2c-to-ggml/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-convert-lla
  ma2c-to-ggml.dir\Release\\" /Fd"llama-convert-llama2c-to-ggml.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorRepor
  t:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\convert-llama2c-to-ggml\convert-ll
  ama2c-to-ggml.cpp"
  convert-llama2c-to-ggml.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\convert-llama2c-to-ggml\Release\"
  .
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-convert-llama2c-to-ggml.exe"
  /INCREMENTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Rele
  ase\common.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\
  ..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib
   winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='as
  Invoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/l
  lama-convert-llama2c-to-ggml.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_co
  re/dependencies/llama.cpp/build/examples/convert-llama2c-to-ggml/Release/llama-convert-llama2c-to-ggml.lib" /MACHINE:
  X64  /machine:x64 "llama-convert-llama2c-to-ggml.dir\Release\convert-llama2c-to-ggml.obj"
  llama-convert-llama2c-to-ggml.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-con
  vert-llama2c-to-ggml.exe
FinalizeBuildStatus:
  Deleting file "llama-convert-llama2c-to-ggml.dir\Release\llama-co.BFE8E5E9.tlog\unsuccessfulbuild".
  Touching "llama-convert-llama2c-to-ggml.dir\Release\llama-co.BFE8E5E9.tlog\llama-convert-llama2c-to-ggml.lastbuildsta
  te".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\convert-llama2c-to-ggml\llama-co
nvert-llama2c-to-ggml.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj" (20) on node 1 (default
 targets).
PrepareForBuild:
  Creating directory "llama-cvector-generator.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-cvector-generator.dir\Release\llama-cv.A107149D.tlog\".
InitializeBuildStatus:
  Creating "llama-cvector-generator.dir\Release\llama-cv.A107149D.tlog\unsuccessfulbuild" because "AlwaysCreate" was sp
  ecified.
  Touching "llama-cvector-generator.dir\Release\llama-cv.A107149D.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/cvector-generator/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-cvector-gen
  erator.dir\Release\\" /Fd"llama-cvector-generator.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /ut
  f-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp"
  cvector-generator.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(26,43): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\cvector-generator\llama-cvector-generator.vcxproj]
  (compiling source file '../../../examples/cvector-generator/cvector-generator.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(38,23): warning C4305: 'initializin
g': truncation from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cvector-genera
tor\llama-cvector-generator.vcxproj]
  (compiling source file '../../../examples/cvector-generator/cvector-generator.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(308,26): warning C4267: '=': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cve
ctor-generator\llama-cvector-generator.vcxproj]
  (compiling source file '../../../examples/cvector-generator/cvector-generator.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(309,39): warning C4267: '=': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cve
ctor-generator\llama-cvector-generator.vcxproj]
  (compiling source file '../../../examples/cvector-generator/cvector-generator.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(101,41): warning C424
4: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\de
pendencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(102,41): warning C424
4: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\de
pendencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(103,50): warning C424
4: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\de
pendencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(108,60): warning C424
4: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\de
pendencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(119,24): warning C424
4: 'initializing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\ll
ama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(129,45): warning C430
5: 'argument': truncation from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cve
ctor-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(135,28): warning C426
7: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(137,20): warning C424
4: 'initializing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\ll
ama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(234,24): warning C426
7: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(346,73): warning C426
7: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(359,71): warning C426
7: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(456,29): warning C426
7: '=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\cvector-generator\llama-cvector-generator.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cvector-generator\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-cvector-generator.exe" /INCRE
  MENTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\co
  mmon.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggm
  l\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winsp
  ool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoke
  r' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-c
  vector-generator.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependenc
  ies/llama.cpp/build/examples/cvector-generator/Release/llama-cvector-generator.lib" /MACHINE:X64  /machine:x64 "llama
  -cvector-generator.dir\Release\cvector-generator.obj"
  llama-cvector-generator.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-cvector-g
  enerator.exe
FinalizeBuildStatus:
  Deleting file "llama-cvector-generator.dir\Release\llama-cv.A107149D.tlog\unsuccessfulbuild".
  Touching "llama-cvector-generator.dir\Release\llama-cv.A107149D.tlog\llama-cvector-generator.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-
generator.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\embedding\llama-embedding.vcxproj" (21) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-embedding.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-embedding.dir\Release\llama-embedding.tlog\".
InitializeBuildStatus:
  Creating "llama-embedding.dir\Release\llama-embedding.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-embedding.dir\Release\llama-embedding.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/embedding/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-embedding.d
  ir\Release\\" /Fd"llama-embedding.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\examples\embedding\embedding.cpp
  embedding.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\embedding\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-embedding.exe" /INCREMENTAL:N
  O /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
   ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\gg
  ml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
  shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcc
  ess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-embedding
  .pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/bu
  ild/examples/embedding/Release/llama-embedding.lib" /MACHINE:X64  /machine:x64 "llama-embedding.dir\Release\embedding
  .obj"
  llama-embedding.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-embedding.exe
FinalizeBuildStatus:
  Deleting file "llama-embedding.dir\Release\llama-embedding.tlog\unsuccessfulbuild".
  Touching "llama-embedding.dir\Release\llama-embedding.tlog\llama-embedding.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\embedding\llama-embedding.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\eval-callback\llama-eval-callback.vcxproj" (22) on node 1 (default targets
).
PrepareForBuild:
  Creating directory "llama-eval-callback.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-eval-callback.dir\Release\llama-ev.3E824B6D.tlog\".
InitializeBuildStatus:
  Creating "llama-eval-callback.dir\Release\llama-ev.3E824B6D.tlog\unsuccessfulbuild" because "AlwaysCreate" was specif
  ied.
  Touching "llama-eval-callback.dir\Release\llama-ev.3E824B6D.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/eval-callback/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-eval-callba
  ck.dir\Release\\" /Fd"llama-eval-callback.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /big
  obj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\eval-callback\eval-callback.cpp"
  eval-callback.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\eval-callback\eval-callback.cpp(137,73): warning C4267: 'argu
ment': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\eval-callback\llama-eval-callback.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\eval-callback\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-eval-callback.exe" /INCREMENT
  AL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common
  .lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\sr
  c\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.
  lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' u
  iAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-eval-
  callback.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llam
  a.cpp/build/examples/eval-callback/Release/llama-eval-callback.lib" /MACHINE:X64  /machine:x64 "llama-eval-callback.d
  ir\Release\eval-callback.obj"
  llama-eval-callback.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-eval-callback
  .exe
FinalizeBuildStatus:
  Deleting file "llama-eval-callback.dir\Release\llama-ev.3E824B6D.tlog\unsuccessfulbuild".
  Touching "llama-eval-callback.dir\Release\llama-ev.3E824B6D.tlog\llama-eval-callback.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\eval-callback\llama-eval-callbac
k.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\export-lora\llama-export-lora.vcxproj" (23) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-export-lora.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-export-lora.dir\Release\llama-ex.696F1282.tlog\".
InitializeBuildStatus:
  Creating "llama-export-lora.dir\Release\llama-ex.696F1282.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifie
  d.
  Touching "llama-export-lora.dir\Release\llama-ex.696F1282.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/export-lora/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-export-lora
  .dir\Release\\" /Fd"llama-export-lora.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\export-lora\export-lora.cpp"
  export-lora.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\export-lora\export-lora.cpp(22,12): warning C4244: 'initializ
ing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\export-lora\llama-export-lora.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\export-lora\export-lora.cpp(27,12): warning C4244: 'initializ
ing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\export-lora\llama-export-lora.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\export-lora\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-export-lora.exe" /INCREMENTAL
  :NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.l
  ib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\
  ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.li
  b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiA
  ccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-export-
  lora.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cp
  p/build/examples/export-lora/Release/llama-export-lora.lib" /MACHINE:X64  /machine:x64 "llama-export-lora.dir\Release
  \export-lora.obj"
  llama-export-lora.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-export-lora.exe
FinalizeBuildStatus:
  Deleting file "llama-export-lora.dir\Release\llama-ex.696F1282.tlog\unsuccessfulbuild".
  Touching "llama-export-lora.dir\Release\llama-ex.696F1282.tlog\llama-export-lora.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\export-lora\llama-export-lora.vc
xproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj" (24) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gemma3-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gemma3-cli.dir\Release\llama-gemma3-cli.tlog\".
InitializeBuildStatus:
  Creating "llama-gemma3-cli.dir\Release\llama-gemma3-cli.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gemma3-cli.dir\Release\llama-gemma3-cli.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama
  .cpp\examples\llava\. /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnost
  ics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CP
  U /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:
  wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-gemma3-cli.dir\Release\\" /Fd"llama-gemma3-cli.dir\Release\v
  c143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\e
  xamples\llava\gemma3-cli.cpp"
  gemma3-cli.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\gemma3-cli.cpp(199,43): warning C4267: '+=': conversion
 from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llama-gemma3-cli.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\gemma3-cli.cpp(208,28): warning C4305: '=': truncation
from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxpro
j]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gemma3-cli.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.li
  b ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\g
  gml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
   shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAc
  cess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-gemma3-c
  li.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/
  build/examples/llava/Release/llama-gemma3-cli.lib" /MACHINE:X64  /machine:x64 "llama-gemma3-cli.dir\Release\gemma3-cl
  i.obj"
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\mtmd.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-gemma3-cli.li
  b and object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-gemma3-cli.exp
LINK : warning LNK4217: symbol '?mtmd_init_from_file@@YAPEAUmtmd_context@@PEBDPEBUllama_model@@Umtmd_context_params@@@Z
 (struct mtmd_context * __cdecl mtmd_init_from_file(char const *,struct llama_model const *,struct mtmd_context_params)
)' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"public: __cdecl gemma3_context::gemma3_context(s
truct common_params &)" (??0gemma3_context@@QEAA@AEAUcommon_params@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.
cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
LINK : warning LNK4217: symbol '?mtmd_free@@YAXPEAUmtmd_context@@@Z (void __cdecl mtmd_free(struct mtmd_context *))' de
fined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"public: __cdecl gemma3_context::gemma3_context(struct
 common_params &)" (??0gemma3_context@@QEAA@AEAUcommon_params@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\llava\llama-gemma3-cli.vcxproj]
LINK : warning LNK4217: symbol '?mtmd_tokenize@@YAHPEAUmtmd_context@@AEAV?$vector@Umtmd_input_chunk@@V?$allocator@Umtmd
_input_chunk@@@std@@@std@@AEBUmtmd_input_text@@AEBV?$vector@Umtmd_bitmap@@V?$allocator@Umtmd_bitmap@@@std@@@3@@Z (int _
_cdecl mtmd_tokenize(struct mtmd_context *,class std::vector<struct mtmd_input_chunk,class std::allocator<struct mtmd_i
nput_chunk> > &,struct mtmd_input_text const &,class std::vector<struct mtmd_bitmap,class std::allocator<struct mtmd_bi
tmap> > const &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"int __cdecl eval_message(struct
gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,
class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std:
:allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat_msg@@AEAV?$vector@V?$basic_strin
g@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@s
td@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
LINK : warning LNK4217: symbol '?mtmd_helper_get_n_tokens@@YA_KAEAV?$vector@Umtmd_input_chunk@@V?$allocator@Umtmd_input
_chunk@@@std@@@std@@@Z (unsigned __int64 __cdecl mtmd_helper_get_n_tokens(class std::vector<struct mtmd_input_chunk,cla
ss std::allocator<struct mtmd_input_chunk> > &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"i
nt __cdecl eval_message(struct gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic_string<char
,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct st
d::char_traits<char>,class std::allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat_m
sg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_tr
aits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llama-gemma3-cli.vcxproj]
LINK : warning LNK4217: symbol '?mtmd_helper_eval@@YAHPEAUmtmd_context@@PEAUllama_context@@AEAV?$vector@Umtmd_input_chu
nk@@V?$allocator@Umtmd_input_chunk@@@std@@@std@@HHH@Z (int __cdecl mtmd_helper_eval(struct mtmd_context *,struct llama_
context *,class std::vector<struct mtmd_input_chunk,class std::allocator<struct mtmd_input_chunk> > &,int,int,int))' de
fined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"int __cdecl eval_message(struct gemma3_context &,stru
ct common_chat_msg &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<
char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > >
> &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat_msg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@s
td@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)' [
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
LINK : warning LNK4217: symbol '?mtmd_helper_bitmap_init_from_file@@YAHPEBDAEAUmtmd_bitmap@@@Z (int __cdecl mtmd_helper
_bitmap_init_from_file(char const *,struct mtmd_bitmap &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in fu
nction '"int __cdecl eval_message(struct gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic_s
tring<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char
,struct std::char_traits<char>,class std::allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcom
mon_chat_msg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@D
U?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llama-gemma3-cli.vcxproj]
  llama-gemma3-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gemma3-cli.exe
FinalizeBuildStatus:
  Deleting file "llama-gemma3-cli.dir\Release\llama-gemma3-cli.tlog\unsuccessfulbuild".
  Touching "llama-gemma3-cli.dir\Release\llama-gemma3-cli.tlog\llama-gemma3-cli.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj"
(default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gen-docs\llama-gen-docs.vcxproj" (25) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gen-docs.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gen-docs.dir\Release\llama-gen-docs.tlog\".
InitializeBuildStatus:
  Creating "llama-gen-docs.dir\Release\llama-gen-docs.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gen-docs.dir\Release\llama-gen-docs.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gen-docs/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-gen-docs.di
  r\Release\\" /Fd"llama-gen-docs.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NE
  URAL_CORE\auryn_core\dependencies\llama.cpp\examples\gen-docs\gen-docs.cpp"
  gen-docs.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gen-docs\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gen-docs.exe" /INCREMENTAL:NO
   /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
  ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggm
  l-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib s
  hell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcce
  ss='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-gen-docs.p
  db" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/buil
  d/examples/gen-docs/Release/llama-gen-docs.lib" /MACHINE:X64  /machine:x64 "llama-gen-docs.dir\Release\gen-docs.obj"
  llama-gen-docs.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gen-docs.exe
FinalizeBuildStatus:
  Deleting file "llama-gen-docs.dir\Release\llama-gen-docs.tlog\unsuccessfulbuild".
  Touching "llama-gen-docs.dir\Release\llama-gen-docs.tlog\llama-gen-docs.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gen-docs\llama-gen-docs.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf\llama-gguf.vcxproj" (26) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gguf.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gguf.dir\Release\llama-gguf.tlog\".
InitializeBuildStatus:
  Creating "llama-gguf.dir\Release\llama-gguf.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gguf.dir\Release\llama-gguf.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\inc
  lude /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /O
  b2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED
   /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /
  GR /std:c++17 /Fo"llama-gguf.dir\Release\\" /Fd"llama-gguf.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:q
  ueue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp
  gguf.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(68,31): warning C4244: '=': conversion from 'in
t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf\llama-gguf.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(105,39): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(105,24): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(120,41): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(120,26): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(131,49): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(131,29): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(166,39): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(166,24): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(179,49): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(179,29): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(194,49): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ggu
f\llama-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(194,29): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gguf\llama-gguf.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf.exe" /INCREMENTAL:NO /NO
  LOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\ggml\src\Release\ggml.lib "..\
  ..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.
  lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32
  .lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/depe
  ndencies/llama.cpp/build/bin/Release/llama-gguf.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/N
  EURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/gguf/Release/llama-gguf.lib" /MACHINE:X64  /machine:x64 "
  llama-gguf.dir\Release\gguf.obj"
  llama-gguf.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf.exe
FinalizeBuildStatus:
  Deleting file "llama-gguf.dir\Release\llama-gguf.tlog\unsuccessfulbuild".
  Touching "llama-gguf.dir\Release\llama-gguf.tlog\llama-gguf.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf\llama-gguf.vcxproj" (defaul
t targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf-hash\llama-gguf-hash.vcxproj" (27) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gguf-hash.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gguf-hash.dir\Release\llama-gguf-hash.tlog\".
InitializeBuildStatus:
  Creating "llama-gguf-hash.dir\Release\llama-gguf-hash.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gguf-hash.dir\Release\llama-gguf-hash.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf-hash/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /I"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-
  hash\deps" /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Comp
  uting Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEB
  UG /D _CRT_SECURE_NO_WARNINGS /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR
  =\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-gguf-hash.dir\Re
  lease\\" /Fd"llama-gguf-hash.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp"
  gguf-hash.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(330,45): warning C4244: 'initializing
': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\gguf-hash\llama-gguf-hash.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(330,25): warning C4244: 'initializing
': conversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\gguf-hash\llama-gguf-hash.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(384,55): warning C4267: 'argument': c
onversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\gguf-hash\llama-gguf-hash.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(413,80): warning C4267: 'argument': c
onversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\gguf-hash\llama-gguf-hash.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(454,78): warning C4267: 'argument': c
onversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\gguf-hash\llama-gguf-hash.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf-hash.exe" /INCREMENTAL:N
  O /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\ggml\src\Release\ggml.lib
   "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-
  base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib adv
  api32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core
  /dependencies/llama.cpp/build/bin/Release/llama-gguf-hash.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IM
  PLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/gguf-hash/Release/llama-gguf-hash.lib" /MACHINE
  :X64  /machine:x64 "llama-gguf-hash.dir\Release\gguf-hash.obj"
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\xxhash.dir\Release\xxhash.obj"
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha1.dir\Release\sha1.obj"
  "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\sha256.dir\Release\sha256.obj"
  llama-gguf-hash.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf-hash.exe
FinalizeBuildStatus:
  Deleting file "llama-gguf-hash.dir\Release\llama-gguf-hash.tlog\unsuccessfulbuild".
  Touching "llama-gguf-hash.dir\Release\llama-gguf-hash.tlog\llama-gguf-hash.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\llama-gguf-hash.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gguf-split\llama-gguf-split.vcxproj" (28) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gguf-split.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gguf-split.dir\Release\llama-gguf-split.tlog\".
InitializeBuildStatus:
  Creating "llama-gguf-split.dir\Release\llama-gguf-split.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gguf-split.dir\Release\llama-gguf-split.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gguf-split/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-gguf-split.
  dir\Release\\" /Fd"llama-gguf-split.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D
  :\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp"
  gguf-split.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(215,18): warning C4244: 'initializi
ng': conversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\
build\examples\gguf-split\llama-gguf-split.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(268,68): warning C4267: 'argument':
 conversion from 'size_t' to 'uint16_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gguf-split\llama-gguf-split.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(308,21): warning C4267: 'initializi
ng': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\gguf-split\llama-gguf-split.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(382,17): warning C4267: 'initializi
ng': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\gguf-split\llama-gguf-split.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(494,26): warning C4244: '+=': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf-split\llama-gguf-split.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-split\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf-split.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.li
  b ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\g
  gml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
   shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAc
  cess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-gguf-spl
  it.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/
  build/examples/gguf-split/Release/llama-gguf-split.lib" /MACHINE:X64  /machine:x64 "llama-gguf-split.dir\Release\gguf
  -split.obj"
  llama-gguf-split.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gguf-split.exe
FinalizeBuildStatus:
  Deleting file "llama-gguf-split.dir\Release\llama-gguf-split.tlog\unsuccessfulbuild".
  Touching "llama-gguf-split.dir\Release\llama-gguf-split.tlog\llama-gguf-split.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-split\llama-gguf-split.vcxp
roj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\gritlm\llama-gritlm.vcxproj" (29) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-gritlm.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-gritlm.dir\Release\llama-gritlm.tlog\".
InitializeBuildStatus:
  Creating "llama-gritlm.dir\Release\llama-gritlm.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-gritlm.dir\Release\llama-gritlm.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/gritlm/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-gritlm.dir\
  Release\\" /Fd"llama-gritlm.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_
  CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp
  gritlm.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(25,43): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gritlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(25,30): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gritlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(32,85): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\gritlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(32,30): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gritlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(79,66): warning C4244: 'argument': conversi
on from 'uint64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gri
tlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(117,49): warning C4267: 'initializing': con
version from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\gritlm\llama-gritlm.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(117,36): warning C4267: 'initializing': con
version from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\gritlm\llama-gritlm.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gritlm\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gritlm.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..
  \..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-
  cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib she
  ll32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess
  ='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-gritlm.pdb"
  /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/ex
  amples/gritlm/Release/llama-gritlm.lib" /MACHINE:X64  /machine:x64 "llama-gritlm.dir\Release\gritlm.obj"
  llama-gritlm.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-gritlm.exe
FinalizeBuildStatus:
  Deleting file "llama-gritlm.dir\Release\llama-gritlm.tlog\unsuccessfulbuild".
  Touching "llama-gritlm.dir\Release\llama-gritlm.tlog\llama-gritlm.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gritlm\llama-gritlm.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\imatrix\llama-imatrix.vcxproj" (30) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-imatrix.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-imatrix.dir\Release\llama-imatrix.tlog\".
InitializeBuildStatus:
  Creating "llama-imatrix.dir\Release\llama-imatrix.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-imatrix.dir\Release\llama-imatrix.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/imatrix/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-imatrix.dir
  \Release\\" /Fd"llama-imatrix.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\examples\imatrix\imatrix.cpp
  imatrix.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\imatrix\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-imatrix.exe" /INCREMENTAL:NO
  /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib .
  .\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml
  -cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib sh
  ell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcces
  s='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-imatrix.pdb
  " /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/
  examples/imatrix/Release/llama-imatrix.lib" /MACHINE:X64  /machine:x64 "llama-imatrix.dir\Release\imatrix.obj"
  llama-imatrix.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-imatrix.exe
FinalizeBuildStatus:
  Deleting file "llama-imatrix.dir\Release\llama-imatrix.tlog\unsuccessfulbuild".
  Touching "llama-imatrix.dir\Release\llama-imatrix.tlog\llama-imatrix.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\imatrix\llama-imatrix.vcxproj" (
default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\infill\llama-infill.vcxproj" (31) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-infill.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-infill.dir\Release\llama-infill.tlog\".
InitializeBuildStatus:
  Creating "llama-infill.dir\Release\llama-infill.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-infill.dir\Release\llama-infill.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/infill/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-infill.dir\
  Release\\" /Fd"llama-infill.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_
  CORE\auryn_core\dependencies\llama.cpp\examples\infill\infill.cpp
  infill.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\infill\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-infill.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..
  \..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-
  cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib she
  ll32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess
  ='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-infill.pdb"
  /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/ex
  amples/infill/Release/llama-infill.lib" /MACHINE:X64  /machine:x64 "llama-infill.dir\Release\infill.obj"
  llama-infill.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-infill.exe
FinalizeBuildStatus:
  Deleting file "llama-infill.dir\Release\llama-infill.tlog\unsuccessfulbuild".
  Touching "llama-infill.dir\Release\llama-infill.tlog\llama-infill.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\infill\llama-infill.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj" (32) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-llava-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-llava-cli.dir\Release\llama-llava-cli.tlog\".
InitializeBuildStatus:
  Creating "llama-llava-cli.dir\Release\llama-llava-cli.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-llava-cli.dir\Release\llama-llava-cli.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama
  .cpp\examples\llava\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_
  core\dependencies\llama.cpp\examples\llava\..\..\common /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\i
  nclude" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNI
  NGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release
  \"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-llava-cli.dir\Release\\" /
  Fd"llama-llava-cli.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\aur
  yn_core\dependencies\llama.cpp\examples\llava\llava-cli.cpp"
  llava-cli.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava-cli.cpp(95,105): warning C4267: 'argument': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\llama-llava-cli.vcxproj]
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-llava-cli.exe" /INCREMENTAL:N
  O /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
   ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\gg
  ml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
  shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcc
  ess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-llava-cli
  .pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/bu
  ild/examples/llava/Release/llama-llava-cli.lib" /MACHINE:X64  /machine:x64 "llama-llava-cli.dir\Release\llava-cli.obj
  "
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-llava-cli.lib
   and object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-llava-cli.exp
LINK : warning LNK4217: symbol 'clip_model_load' defined in 'clip.obj' is imported by 'llava-cli.obj' in function '"str
uct llava_context * __cdecl llava_init_context(struct common_params *,struct llama_model *)" (?llava_init_context@@YAPE
AUllava_context@@PEAUcommon_params@@PEAUllama_model@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\llava\llama-llava-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'llava-cli.obj' in function '"void __cd
ecl llava_free(struct llava_context *)" (?llava_free@@YAXPEAUllava_context@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencie
s\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_make_with_bytes' defined in 'llava.obj' is imported by 'llava-cli.obj
' in function '"struct llava_image_embed * __cdecl llava_image_embed_make_with_prompt_base64(struct clip_ctx *,int,clas
s std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?llava_image_embed_make_
with_prompt_base64@@YAPEAUllava_image_embed@@PEAUclip_ctx@@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@
@std@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'llava-cli.
obj' in function '"struct llava_image_embed * __cdecl load_image(struct llava_context *,struct common_params *,class st
d::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?load_image@@YAPEAUllava_ima
ge_embed@@PEAUllava_context@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)' [
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'llava-cli.obj' in functi
on 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_eval_image_embed' defined in 'llava.obj' is imported by 'llava-cli.obj' in functi
on '"void __cdecl process_prompt(struct llava_context *,struct llava_image_embed *,struct common_params *,class std::ba
sic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?process_prompt@@YAXPEAUllava_con
text@@PEAUllava_image_embed@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)' [
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
  llama-llava-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-llava-cli.exe
FinalizeBuildStatus:
  Deleting file "llama-llava-cli.dir\Release\llama-llava-cli.tlog\unsuccessfulbuild".
  Touching "llama-llava-cli.dir\Release\llama-llava-cli.tlog\llama-llava-cli.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj" (
default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llama-llava-clip-quantize-cli.vcxproj" (33) on node 1 (default targe
ts).
PrepareForBuild:
  Creating directory "llama-llava-clip-quantize-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-llava-clip-quantize-cli.dir\Release\llama-ll.789CABF5.tlog\".
InitializeBuildStatus:
  Creating "llama-llava-clip-quantize-cli.dir\Release\llama-ll.789CABF5.tlog\unsuccessfulbuild" because "AlwaysCreate"
  was specified.
  Touching "llama-llava-clip-quantize-cli.dir\Release\llama-ll.789CABF5.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama
  .cpp\examples\llava\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_
  core\dependencies\llama.cpp\examples\llava\..\..\common /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\i
  nclude" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNI
  NGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release
  \"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-llava-clip-quantize-cli.di
  r\Release\\" /Fd"llama-llava-clip-quantize-cli.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8
   /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-quantize-cli.cpp"
  clip-quantize-cli.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-llava-clip-quantize-cli.exe"
  /INCREMENTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Rele
  ase\common.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\
  ..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib
   winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='as
  Invoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/l
  lama-llava-clip-quantize-cli.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_co
  re/dependencies/llama.cpp/build/examples/llava/Release/llama-llava-clip-quantize-cli.lib" /MACHINE:X64  /machine:x64
  "llama-llava-clip-quantize-cli.dir\Release\clip-quantize-cli.obj"
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-llava-clip-qu
  antize-cli.lib and object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-llava-c
  lip-quantize-cli.exp
LINK : warning LNK4217: symbol 'clip_model_quantize' defined in 'clip.obj' is imported by 'clip-quantize-cli.obj' in fu
nction 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-clip-quantize-cli.vcxp
roj]
  llama-llava-clip-quantize-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lla
  va-clip-quantize-cli.exe
FinalizeBuildStatus:
  Deleting file "llama-llava-clip-quantize-cli.dir\Release\llama-ll.789CABF5.tlog\unsuccessfulbuild".
  Touching "llama-llava-clip-quantize-cli.dir\Release\llama-ll.789CABF5.tlog\llama-llava-clip-quantize-cli.lastbuildsta
  te".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-clip-quantize-
cli.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\lookahead\llama-lookahead.vcxproj" (34) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-lookahead.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-lookahead.dir\Release\llama-lookahead.tlog\".
InitializeBuildStatus:
  Creating "llama-lookahead.dir\Release\llama-lookahead.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-lookahead.dir\Release\llama-lookahead.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/lookahead/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-lookahead.d
  ir\Release\\" /Fd"llama-lookahead.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp
  lookahead.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(90,33): warning C4267: 'initializing'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\lookahead\llama-lookahead.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(90,23): warning C4267: 'initializing'
: conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\lookahead\llama-lookahead.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(107,16): warning C4267: 'initializing
': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\lookahead\llama-lookahead.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(364,115): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\lookahead\llama-lookahead.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookahead\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookahead.exe" /INCREMENTAL:N
  O /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
   ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\gg
  ml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
  shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcc
  ess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-lookahead
  .pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/bu
  ild/examples/lookahead/Release/llama-lookahead.lib" /MACHINE:X64  /machine:x64 "llama-lookahead.dir\Release\lookahead
  .obj"
  llama-lookahead.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookahead.exe
FinalizeBuildStatus:
  Deleting file "llama-lookahead.dir\Release\llama-lookahead.tlog\unsuccessfulbuild".
  Touching "llama-lookahead.dir\Release\llama-lookahead.tlog\llama-lookahead.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookahead\llama-lookahead.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup.vcxproj" (35) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-lookup.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-lookup.dir\Release\llama-lookup.tlog\".
InitializeBuildStatus:
  Creating "llama-lookup.dir\Release\llama-lookup.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-lookup.dir\Release\llama-lookup.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/lookup/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-lookup.dir\
  Release\\" /Fd"llama-lookup.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_
  CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp
  lookup.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(54,103): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\look
up\llama-lookup.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(90,33): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
ookup\llama-lookup.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(90,23): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\lookup\llama-lookup.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(103,16): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
lookup\llama-lookup.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(208,58): warning C4267: 'argument': convers
ion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\lookup\llama-lookup.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(212,35): warning C4267: '+=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\lla
ma-lookup.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..
  \..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-
  cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib she
  ll32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess
  ='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-lookup.pdb"
  /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/ex
  amples/lookup/Release/llama-lookup.lib" /MACHINE:X64  /machine:x64 "llama-lookup.dir\Release\lookup.obj"
  llama-lookup.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup.exe
FinalizeBuildStatus:
  Deleting file "llama-lookup.dir\Release\llama-lookup.tlog\unsuccessfulbuild".
  Touching "llama-lookup.dir\Release\llama-lookup.tlog\llama-lookup.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-create.vcxproj" (36) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-lookup-create.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-lookup-create.dir\Release\llama-lo.FE22F8AD.tlog\".
InitializeBuildStatus:
  Creating "llama-lookup-create.dir\Release\llama-lo.FE22F8AD.tlog\unsuccessfulbuild" because "AlwaysCreate" was specif
  ied.
  Touching "llama-lookup-create.dir\Release\llama-lo.FE22F8AD.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/lookup/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-lookup-crea
  te.dir\Release\\" /Fd"llama-lookup-create.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /big
  obj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-create.cpp"
  lookup-create.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-create.cpp(34,97): warning C4267: 'argument': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\lookup\llama-lookup-create.vcxproj]
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-create.exe" /INCREMENT
  AL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common
  .lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\sr
  c\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.
  lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' u
  iAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-looku
  p-create.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llam
  a.cpp/build/examples/lookup/Release/llama-lookup-create.lib" /MACHINE:X64  /machine:x64 "llama-lookup-create.dir\Rele
  ase\lookup-create.obj"
  llama-lookup-create.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-create
  .exe
FinalizeBuildStatus:
  Deleting file "llama-lookup-create.dir\Release\llama-lo.FE22F8AD.tlog\unsuccessfulbuild".
  Touching "llama-lookup-create.dir\Release\llama-lo.FE22F8AD.tlog\llama-lookup-create.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-create.vcxpr
oj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-merge.vcxproj" (37) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-lookup-merge.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-lookup-merge.dir\Release\llama-lo.5460B1FB.tlog\".
InitializeBuildStatus:
  Creating "llama-lookup-merge.dir\Release\llama-lo.5460B1FB.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifi
  ed.
  Touching "llama-lookup-merge.dir\Release\llama-lo.5460B1FB.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/lookup/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-lookup-merg
  e.dir\Release\\" /Fd"llama-lookup-merge.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigob
  j "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-merge.cpp"
  lookup-merge.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-merge.exe" /INCREMENTA
  L:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.
  lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src
  \ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.l
  ib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' ui
  Access='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-lookup
  -merge.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.
  cpp/build/examples/lookup/Release/llama-lookup-merge.lib" /MACHINE:X64  /machine:x64 "llama-lookup-merge.dir\Release\
  lookup-merge.obj"
  llama-lookup-merge.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-merge.e
  xe
FinalizeBuildStatus:
  Deleting file "llama-lookup-merge.dir\Release\llama-lo.5460B1FB.tlog\unsuccessfulbuild".
  Touching "llama-lookup-merge.dir\Release\llama-lo.5460B1FB.tlog\llama-lookup-merge.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-merge.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-stats.vcxproj" (38) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-lookup-stats.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-lookup-stats.dir\Release\llama-lo.6499C5E1.tlog\".
InitializeBuildStatus:
  Creating "llama-lookup-stats.dir\Release\llama-lo.6499C5E1.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifi
  ed.
  Touching "llama-lookup-stats.dir\Release\llama-lo.6499C5E1.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/lookup/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-lookup-stat
  s.dir\Release\\" /Fd"llama-lookup-stats.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigob
  j "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp"
  lookup-stats.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(67,33): warning C4267: 'initializing'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\lookup\llama-lookup-stats.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(67,23): warning C4267: 'initializing'
: conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\lookup\llama-lookup-stats.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(93,39): warning C4267: '+=': conversi
on from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\looku
p\llama-lookup-stats.vcxproj]
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-stats.exe" /INCREMENTA
  L:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.
  lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src
  \ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.l
  ib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' ui
  Access='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-lookup
  -stats.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.
  cpp/build/examples/lookup/Release/llama-lookup-stats.lib" /MACHINE:X64  /machine:x64 "llama-lookup-stats.dir\Release\
  lookup-stats.obj"
  llama-lookup-stats.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-lookup-stats.e
  xe
FinalizeBuildStatus:
  Deleting file "llama-lookup-stats.dir\Release\llama-lo.6499C5E1.tlog\unsuccessfulbuild".
  Touching "llama-lookup-stats.dir\Release\llama-lo.6499C5E1.tlog\llama-lookup-stats.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-stats.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj" (39) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-minicpmv-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-minicpmv-cli.dir\Release\llama-mi.398D8C03.tlog\".
InitializeBuildStatus:
  Creating "llama-minicpmv-cli.dir\Release\llama-mi.398D8C03.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifi
  ed.
  Touching "llama-minicpmv-cli.dir\Release\llama-mi.398D8C03.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama
  .cpp\examples\llava\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_
  core\dependencies\llama.cpp\examples\llava\..\..\common /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\i
  nclude" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNI
  NGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release
  \"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-minicpmv-cli.dir\Release\\
  " /Fd"llama-minicpmv-cli.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CO
  RE\auryn_core\dependencies\llama.cpp\examples\llava\minicpmv-cli.cpp"
  minicpmv-cli.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\minicpmv-cli.cpp(229,27): warning C4244: 'initializing'
: conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llama-minicpmv-cli.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\minicpmv-cli.cpp(235,30): warning C4244: 'initializing'
: conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llama-minicpmv-cli.vcxproj]
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-minicpmv-cli.exe" /INCREMENTA
  L:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.
  lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src
  \ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.l
  ib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' ui
  Access='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-minicp
  mv-cli.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.
  cpp/build/examples/llava/Release/llama-minicpmv-cli.lib" /MACHINE:X64  /machine:x64 "llama-minicpmv-cli.dir\Release\m
  inicpmv-cli.obj"
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-minicpmv-cli.
  lib and object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-minicpmv-cli.exp
LINK : warning LNK4217: symbol 'clip_init' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '"struct
 llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<char,struct std::char_traits<char
>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAUcommon_params@@AEBV?$basic_str
ing@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function 'main' [
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_embd_nbytes' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '
"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?proces
s_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_n_patches' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '"v
oid __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?process_
eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama
.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_n_mmproj_embd' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function
 '"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?proc
ess_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_uhd_num_image_embeds_col' defined in 'clip.obj' is imported by 'minicpmv-cli.obj'
in function '"void __cdecl process_image(struct llava_context *,struct llava_image_embed *,struct common_params *,int &
)" (?process_image@@YAXPEAUllava_context@@PEAUllava_image_embed@@PEAUcommon_params@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core
\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_is_minicpmv' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '
"void __cdecl process_image(struct llava_context *,struct llava_image_embed *,struct common_params *,int &)" (?process_
image@@YAXPEAUllava_context@@PEAUllava_image_embed@@PEAUcommon_params@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'minicpmv-c
li.obj' in function '"struct llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<char,
struct std::char_traits<char>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAUco
mmon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\depen
dencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'minicpmv-cli.obj' in fun
ction '"struct llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<char,struct std::ch
ar_traits<char>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAUcommon_params@@A
EBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.
cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_eval_image_embed' defined in 'llava.obj' is imported by 'minicpmv-cli.obj' in fun
ction '"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (
?process_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependenc
ies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  llama-minicpmv-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-minicpmv-cli.e
  xe
FinalizeBuildStatus:
  Deleting file "llama-minicpmv-cli.dir\Release\llama-mi.398D8C03.tlog\unsuccessfulbuild".
  Touching "llama-minicpmv-cli.dir\Release\llama-mi.398D8C03.tlog\llama-minicpmv-cli.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj
" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\parallel\llama-parallel.vcxproj" (40) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-parallel.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-parallel.dir\Release\llama-parallel.tlog\".
InitializeBuildStatus:
  Creating "llama-parallel.dir\Release\llama-parallel.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-parallel.dir\Release\llama-parallel.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/parallel/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-parallel.di
  r\Release\\" /Fd"llama-parallel.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEU
  RAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp
  parallel.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(167,21): warning C4267: '=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\par
allel\llama-parallel.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(173,55): warning C4267: 'initializing':
 conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\parallel\llama-parallel.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(173,35): warning C4267: 'initializing':
 conversion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\parallel\llama-parallel.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(267,69): warning C4267: 'argument': con
version from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\parallel\llama-parallel.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(275,58): warning C4267: '=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\par
allel\llama-parallel.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\parallel\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-parallel.exe" /INCREMENTAL:NO
   /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
  ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggm
  l-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib s
  hell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcce
  ss='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-parallel.p
  db" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/buil
  d/examples/parallel/Release/llama-parallel.lib" /MACHINE:X64  /machine:x64 "llama-parallel.dir\Release\parallel.obj"
  llama-parallel.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-parallel.exe
FinalizeBuildStatus:
  Deleting file "llama-parallel.dir\Release\llama-parallel.tlog\unsuccessfulbuild".
  Touching "llama-parallel.dir\Release\llama-parallel.tlog\llama-parallel.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\parallel\llama-parallel.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\passkey\llama-passkey.vcxproj" (41) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-passkey.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-passkey.dir\Release\llama-passkey.tlog\".
InitializeBuildStatus:
  Creating "llama-passkey.dir\Release\llama-passkey.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-passkey.dir\Release\llama-passkey.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/passkey/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-passkey.dir
  \Release\\" /Fd"llama-passkey.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp
  passkey.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(101,79): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\passkey\llama-passkey.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(101,31): warning C4267: 'initializing': c
onversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\passkey\llama-passkey.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(103,46): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\passkey\llama-passkey.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(103,28): warning C4267: 'initializing': c
onversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\passkey\llama-passkey.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\passkey\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-passkey.exe" /INCREMENTAL:NO
  /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib .
  .\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml
  -cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib sh
  ell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcces
  s='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-passkey.pdb
  " /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/
  examples/passkey/Release/llama-passkey.lib" /MACHINE:X64  /machine:x64 "llama-passkey.dir\Release\passkey.obj"
  llama-passkey.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-passkey.exe
FinalizeBuildStatus:
  Deleting file "llama-passkey.dir\Release\llama-passkey.tlog\unsuccessfulbuild".
  Touching "llama-passkey.dir\Release\llama-passkey.tlog\llama-passkey.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\passkey\llama-passkey.vcxproj" (
default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\perplexity\llama-perplexity.vcxproj" (42) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-perplexity.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-perplexity.dir\Release\llama-perplexity.tlog\".
InitializeBuildStatus:
  Creating "llama-perplexity.dir\Release\llama-perplexity.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-perplexity.dir\Release\llama-perplexity.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/perplexity/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-perplexity.
  dir\Release\\" /Fd"llama-perplexity.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:
  \NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\perplexity\perplexity.cpp
  perplexity.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\perplexity\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-perplexity.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.li
  b ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\g
  gml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
   shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAc
  cess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-perplexi
  ty.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/
  build/examples/perplexity/Release/llama-perplexity.lib" /MACHINE:X64  /machine:x64 "llama-perplexity.dir\Release\perp
  lexity.obj"
  llama-perplexity.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-perplexity.exe
FinalizeBuildStatus:
  Deleting file "llama-perplexity.dir\Release\llama-perplexity.tlog\unsuccessfulbuild".
  Touching "llama-perplexity.dir\Release\llama-perplexity.tlog\llama-perplexity.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\perplexity\llama-perplexity.vcxp
roj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\pocs\vdot\llama-q8dot.vcxproj" (43) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-q8dot.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-q8dot.dir\Release\llama-q8dot.tlog\".
InitializeBuildStatus:
  Creating "llama-q8dot.dir\Release\llama-q8dot.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-q8dot.dir\Release\llama-q8dot.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/pocs/vdot/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\pocs /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:
  \NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\C
  UDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECU
  RE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDI
  R=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-q8dot.dir\Relea
  se\\" /Fd"llama-q8dot.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\a
  uryn_core\dependencies\llama.cpp\pocs\vdot\q8dot.cpp
  q8dot.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\pocs\vdot\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-q8dot.exe" /INCREMENTAL:NO /N
  OLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\
  ..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-c
  uda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shel
  l32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess=
  'false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-q8dot.pdb" /S
  UBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/pocs
  /vdot/Release/llama-q8dot.lib" /MACHINE:X64  /machine:x64 "llama-q8dot.dir\Release\q8dot.obj"
  llama-q8dot.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-q8dot.exe
FinalizeBuildStatus:
  Deleting file "llama-q8dot.dir\Release\llama-q8dot.tlog\unsuccessfulbuild".
  Touching "llama-q8dot.dir\Release\llama-q8dot.tlog\llama-q8dot.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\pocs\vdot\llama-q8dot.vcxproj" (default t
argets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\quantize\llama-quantize.vcxproj" (44) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-quantize.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-quantize.dir\Release\llama-quantize.tlog\".
InitializeBuildStatus:
  Creating "llama-quantize.dir\Release\llama-quantize.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-quantize.dir\Release\llama-quantize.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/quantize/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\quanti
  ze\..\..\common /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\
  llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\depende
  ncies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3
  /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED
  /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /f
  p:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-quantize.dir\Release\\" /Fd"llama-quantize.dir
  \Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\ll
  ama.cpp\examples\quantize\quantize.cpp
  quantize.cpp
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\quantize\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-quantize.exe" /INCREMENTAL:NO
   /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
  ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggm
  l-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib s
  hell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcce
  ss='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-quantize.p
  db" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/buil
  d/examples/quantize/Release/llama-quantize.lib" /MACHINE:X64  /machine:x64 "llama-quantize.dir\Release\quantize.obj"
  llama-quantize.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-quantize.exe
FinalizeBuildStatus:
  Deleting file "llama-quantize.dir\Release\llama-quantize.tlog\unsuccessfulbuild".
  Touching "llama-quantize.dir\Release\llama-quantize.tlog\llama-quantize.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\quantize\llama-quantize.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj" (45) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-qwen2vl-cli.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-qwen2vl-cli.dir\Release\llama-qw.2F4891E0.tlog\".
InitializeBuildStatus:
  Creating "llama-qwen2vl-cli.dir\Release\llama-qw.2F4891E0.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifie
  d.
  Touching "llama-qwen2vl-cli.dir\Release\llama-qw.2F4891E0.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama
  .cpp\examples\llava\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\..\.. /ID:\NEURAL_CORE\auryn_
  core\dependencies\llama.cpp\examples\llava\..\..\common /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\i
  nclude" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNI
  NGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release
  \"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-qwen2vl-cli.dir\Release\\"
   /Fd"llama-qwen2vl-cli.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE
  \auryn_core\dependencies\llama.cpp\examples\llava\qwen2vl-cli.cpp"
  qwen2vl-cli.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\qwen2vl-cli.cpp(180,105): warning C4267: 'argument': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llama-qwen2vl-cli.vcxproj]
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-qwen2vl-cli.exe" /INCREMENTAL
  :NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.l
  ib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\
  ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.li
  b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiA
  ccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-qwen2vl
  -cli.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cp
  p/build/examples/llava/Release/llama-qwen2vl-cli.lib" /MACHINE:X64  /machine:x64 "llama-qwen2vl-cli.dir\Release\qwen2
  vl-cli.obj"
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-qwen2vl-cli.l
  ib and object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llama-qwen2vl-cli.exp
LINK : warning LNK4217: symbol 'clip_model_load' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in function '"s
truct llava_context * __cdecl llava_init_context(struct common_params *,struct llama_model *)" (?llava_init_context@@YA
PEAUllava_context@@PEAUcommon_params@@PEAUllama_model@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\llava\llama-qwen2vl-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in function '"void __
cdecl llava_free(struct llava_context *)" (?llava_free@@YAXPEAUllava_context@@@Z)' [D:\NEURAL_CORE\auryn_core\dependenc
ies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
LINK : warning LNK4217: symbol 'clip_get_load_image_size' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in fun
ction '"void __cdecl process_prompt(struct llava_context *,struct llava_image_embed *,struct common_params *,class std:
:basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?process_prompt@@YAXPEAUllava_
context@@PEAUllava_image_embed@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)
' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_make_with_bytes' defined in 'llava.obj' is imported by 'qwen2vl-cli.o
bj' in function '"struct llava_image_embed * __cdecl llava_image_embed_make_with_prompt_base64(struct clip_ctx *,int,cl
ass std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?llava_image_embed_mak
e_with_prompt_base64@@YAPEAUllava_image_embed@@PEAUclip_ctx@@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@
2@@std@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'qwen2vl-cl
i.obj' in function '"struct llava_image_embed * __cdecl load_image(struct llava_context *,struct common_params *,class
std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?load_image@@YAPEAUllava_i
mage_embed@@PEAUllava_context@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)'
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'qwen2vl-cli.obj' in func
tion 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
  llama-qwen2vl-cli.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-qwen2vl-cli.exe
FinalizeBuildStatus:
  Deleting file "llama-qwen2vl-cli.dir\Release\llama-qw.2F4891E0.tlog\unsuccessfulbuild".
  Touching "llama-qwen2vl-cli.dir\Release\llama-qw.2F4891E0.tlog\llama-qwen2vl-cli.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\retrieval\llama-retrieval.vcxproj" (46) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-retrieval.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-retrieval.dir\Release\llama-retrieval.tlog\".
InitializeBuildStatus:
  Creating "llama-retrieval.dir\Release\llama-retrieval.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-retrieval.dir\Release\llama-retrieval.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/retrieval/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-retrieval.d
  ir\Release\\" /Fd"llama-retrieval.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp
  retrieval.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(80,44): warning C4267: 'argument': co
nversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\retrieval\llama-retrieval.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(216,37): warning C4267: 'initializing
': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\retrieval\llama-retrieval.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(216,24): warning C4267: 'initializing
': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\retrieval\llama-retrieval.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(217,49): warning C4244: 'argument': c
onversion from 'const uint64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\retrieval\llama-retrieval.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(258,55): warning C4244: 'argument': c
onversion from 'const uint64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\retrieval\llama-retrieval.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\retrieval\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-retrieval.exe" /INCREMENTAL:N
  O /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
   ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\gg
  ml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib
  shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcc
  ess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-retrieval
  .pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/bu
  ild/examples/retrieval/Release/llama-retrieval.lib" /MACHINE:X64  /machine:x64 "llama-retrieval.dir\Release\retrieval
  .obj"
  llama-retrieval.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-retrieval.exe
FinalizeBuildStatus:
  Deleting file "llama-retrieval.dir\Release\llama-retrieval.tlog\unsuccessfulbuild".
  Touching "llama-retrieval.dir\Release\llama-retrieval.tlog\llama-retrieval.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\retrieval\llama-retrieval.vcxpro
j" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\run\llama-run.vcxproj" (47) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-run.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-run.dir\Release\llama-run.tlog\".
InitializeBuildStatus:
  Creating "llama-run.dir\Release\llama-run.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-run.dir\Release\llama-run.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/run/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-run.dir\Rel
  ease\\" /Fd"llama-run.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\a
  uryn_core\dependencies\llama.cpp\examples\run\run.cpp D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\l
  inenoise.cpp\linenoise.cpp
  run.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(131,33): warning C4244: '=': conversion from 'dou
ble' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-run.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(919,23): warning C4267: 'return': conversion from
 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-ru
n.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(927,83): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\ll
ama-run.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(929,102): warning C4267: 'argument': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\l
lama-run.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(929,58): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\ll
ama-run.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(980,71): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\ll
ama-run.vcxproj]
  linenoise.cpp
  Generating Code...
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-run.exe" /INCREMENTAL:NO /NOL
  OGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\..
  \src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cud
  a\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell3
  2.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='f
  alse'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-run.pdb" /SUBSY
  STEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples
  /run/Release/llama-run.lib" /MACHINE:X64  /machine:x64 "llama-run.dir\Release\run.obj"
  "llama-run.dir\Release\linenoise.obj"
  llama-run.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-run.exe
FinalizeBuildStatus:
  Deleting file "llama-run.dir\Release\llama-run.tlog\unsuccessfulbuild".
  Touching "llama-run.dir\Release\llama-run.tlog\llama-run.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-run.vcxproj" (default
targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\save-load-state\llama-save-load-state.vcxproj" (48) on node 1 (default tar
gets).
PrepareForBuild:
  Creating directory "llama-save-load-state.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-save-load-state.dir\Release\llama-sa.A0AACB5C.tlog\".
InitializeBuildStatus:
  Creating "llama-save-load-state.dir\Release\llama-sa.A0AACB5C.tlog\unsuccessfulbuild" because "AlwaysCreate" was spec
  ified.
  Touching "llama-save-load-state.dir\Release\llama-sa.A0AACB5C.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/save-load-state/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-save-load-s
  tate.dir\Release\\" /Fd"llama-save-load-state.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8
  /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\save-load-state\save-load-state.cpp"
  save-load-state.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\save-load-state\save-load-state.cpp(51,53): warning C4267: 'a
rgument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cp
p\build\examples\save-load-state\llama-save-load-state.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\save-load-state\save-load-state.cpp(53,44): warning C4267: 'a
rgument': conversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.
cpp\build\examples\save-load-state\llama-save-load-state.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\save-load-state\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-save-load-state.exe" /INCREME
  NTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\comm
  on.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\
  src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspoo
  l.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker'
   uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-sav
  e-load-state.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/
  llama.cpp/build/examples/save-load-state/Release/llama-save-load-state.lib" /MACHINE:X64  /machine:x64 "llama-save-lo
  ad-state.dir\Release\save-load-state.obj"
  llama-save-load-state.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-save-load-s
  tate.exe
FinalizeBuildStatus:
  Deleting file "llama-save-load-state.dir\Release\llama-sa.A0AACB5C.tlog\unsuccessfulbuild".
  Touching "llama-save-load-state.dir\Release\llama-sa.A0AACB5C.tlog\llama-save-load-state.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\save-load-state\llama-save-load-
state.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj" (49) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-server.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-server.dir\Release\llama-server.tlog\".
InitializeBuildStatus:
  Creating "llama-server.dir\Release\llama-server.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-server.dir\Release\llama-server.tlog\unsuccessfulbuild".
CustomBuild:
  Generating index.html.gz.hpp
  Generating loading.html.hpp
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/server/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server
   /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server /ID:\NEURAL_CORE\auryn_core\dependencies\ll
  ama.cpp /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cp
  p\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\ll
  ama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /di
  agnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_
  USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precis
  e /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-server.dir\Release\\" /Fd"llama-server.dir\Release\vc1
  43.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\exam
  ples\server\server.cpp
  server.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267: 'argument': conversi
on from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267: 'argument': conversi
on from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267: 'argument': conversi
on from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267: 'argument': convers
ion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(394,16): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\s
erver\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(405,52): warning C4267: '=': conversion from
 'size_t' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(426,48): warning C4267: '=': conversion from
 'size_t' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(896,17): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\s
erver\llama-server.vcxproj]
  (compiling source file '../../../examples/server/server.cpp')

D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1515,48): warning C4244: '+=': conversion f
rom 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1516,48): warning C4244: '+=': conversion f
rom 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1522,43): warning C4244: '+=': conversion f
rom 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1523,43): warning C4244: '+=': conversion f
rom 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2055,33): warning C4267: 'initializing': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2390,28): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2421,36): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2467,30): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2510,26): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2709,85): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2977,66): warning C4267: '=': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server
\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267: 'argument': conver
sion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:             _Ty=in
t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3052,74): warning C4267: '=': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server
\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3061,57): warning C4267: '=': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server
\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3089,89): warning C4267: 'argument': conver
sion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3089,81): warning C4267: 'argument': conver
sion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,107): warning C4244: 'argument': conve
rsion from 'const int64_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,96): warning C4267: 'argument': conver
sion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,81): warning C4267: 'argument': conver
sion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3343,49): warning C4267: '+=': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serve
r\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3357,81): warning C4267: 'argument': conver
sion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3367,43): warning C4267: '+=': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serve
r\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3368,43): warning C4267: '+=': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serve
r\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3371,53): warning C4267: '+=': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serve
r\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3969,30): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(4293,38): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(4393,38): warning C4267: '=': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\lla
ma-server.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-server.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ws
  2_32.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggm
  l\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winsp
  ool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoke
  r' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-s
  erver.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.c
  pp/build/examples/server/Release/llama-server.lib" /MACHINE:X64  /machine:x64 "llama-server.dir\Release\server.obj"
  llama-server.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-server.exe
FinalizeBuildStatus:
  Deleting file "llama-server.dir\Release\llama-server.tlog\unsuccessfulbuild".
  Touching "llama-server.dir\Release\llama-server.tlog\llama-server.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\simple\llama-simple.vcxproj" (50) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-simple.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-simple.dir\Release\llama-simple.tlog\".
InitializeBuildStatus:
  Creating "llama-simple.dir\Release\llama-simple.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-simple.dir\Release\llama-simple.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/simple/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"llama-simple.dir\Release\\" /Fd"llama-simple.dir\Release\vc143.pdb" /external
  :W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simpl
  e.cpp
  simple.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(97,76): warning C4267: 'argument': conversi
on from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\s
imple\llama-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(101,102): warning C4267: 'argument': conver
sion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\simple\llama-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(101,58): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
simple\llama-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(146,85): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
simple\llama-simple.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-simple.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\src\Release\llama.lib ..\..\
  ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\
  ..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib
  uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"
  D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-simple.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYN
  AMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/simple/Release/llama-simp
  le.lib" /MACHINE:X64  /machine:x64 "llama-simple.dir\Release\simple.obj"
  llama-simple.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-simple.exe
FinalizeBuildStatus:
  Deleting file "llama-simple.dir\Release\llama-simple.tlog\unsuccessfulbuild".
  Touching "llama-simple.dir\Release\llama-simple.tlog\llama-simple.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple\llama-simple.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj" (51) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-simple-chat.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-simple-chat.dir\Release\llama-si.C48479CB.tlog\".
InitializeBuildStatus:
  Creating "llama-simple-chat.dir\Release\llama-si.C48479CB.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifie
  d.
  Touching "llama-simple-chat.dir\Release\llama-si.C48479CB.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/simple-chat/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"llama-simple-chat.dir\Release\\" /Fd"llama-simple-chat.dir\Release\vc143.pdb"
   /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\s
  imple-chat\simple-chat.cpp"
  simple-chat.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(104,87): warning C4267: 'argument
': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(106,106): warning C4267: 'argumen
t': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(106,62): warning C4267: 'argument
': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(111,89): warning C4267: 'argument
': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(170,127): warning C4267: 'argumen
t': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(173,127): warning C4267: 'argumen
t': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(169,37): warning C4996: 'strdup':
 The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help f
or details. [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(189,42): warning C4996: 'strdup':
 The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help f
or details. [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-simple-chat.exe" /INCREMENTAL
  :NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\src\Release\llama.lib .
  .\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib"
   "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32
  .lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /
  PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-simple-chat.pdb" /SUBSYSTEM:CONSOLE /TL
  BID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/simple-chat/Rel
  ease/llama-simple-chat.lib" /MACHINE:X64  /machine:x64 "llama-simple-chat.dir\Release\simple-chat.obj"
  llama-simple-chat.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-simple-chat.exe
FinalizeBuildStatus:
  Deleting file "llama-simple-chat.dir\Release\llama-si.C48479CB.tlog\unsuccessfulbuild".
  Touching "llama-simple-chat.dir\Release\llama-si.C48479CB.tlog\llama-simple-chat.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vc
xproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj" (52) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-speculative.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-speculative.dir\Release\llama-sp.1A4AF599.tlog\".
InitializeBuildStatus:
  Creating "llama-speculative.dir\Release\llama-sp.1A4AF599.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifie
  d.
  Touching "llama-speculative.dir\Release\llama-sp.1A4AF599.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/speculative/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-speculative
  .dir\Release\\" /Fd"llama-speculative.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp
  speculative.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(164,33): warning C4267: 'initiali
zing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(164,23): warning C4267: 'initiali
zing': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(185,20): warning C4267: 'initiali
zing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(186,20): warning C4267: 'initiali
zing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267: 'argumen
t': conversion from 'size_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
with [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
[ [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
    _Ty=unsigned int [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcx
proj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
] [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(267,33): warning C4244: 'initiali
zing': conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\speculative\llama-speculative.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-speculative.exe" /INCREMENTAL
  :NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.l
  ib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\
  ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.li
  b shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiA
  ccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-specula
  tive.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cp
  p/build/examples/speculative/Release/llama-speculative.lib" /MACHINE:X64  /machine:x64 "llama-speculative.dir\Release
  \speculative.obj"
  llama-speculative.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-speculative.exe
FinalizeBuildStatus:
  Deleting file "llama-speculative.dir\Release\llama-sp.1A4AF599.tlog\unsuccessfulbuild".
  Touching "llama-speculative.dir\Release\llama-sp.1A4AF599.tlog\llama-speculative.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vc
xproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj" (53) on node 1 (defau
lt targets).
PrepareForBuild:
  Creating directory "llama-speculative-simple.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-speculative-simple.dir\Release\llama-sp.9F6BB209.tlog\".
InitializeBuildStatus:
  Creating "llama-speculative-simple.dir\Release\llama-sp.9F6BB209.tlog\unsuccessfulbuild" because "AlwaysCreate" was s
  pecified.
  Touching "llama-speculative-simple.dir\Release\llama-sp.9F6BB209.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/speculative-simple/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-speculative
  -simple.dir\Release\\" /Fd"llama-speculative-simple.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /
  utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp"
  speculative-simple.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(116,70): warning C4
267: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(125,16): warning C4
267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(165,62): warning C4
267: 'argument': conversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(186,33): warning C4
267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(187,32): warning C4
267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(188,33): warning C4
267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(189,30): warning C4
267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(230,33): warning C4
267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(230,23): warning C4
267: 'initializing': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependen
cies\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative-simple\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-speculative-simple.exe" /INCR
  EMENTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\c
  ommon.lib ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\gg
  ml\src\ggml-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib wins
  pool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvok
  er' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-
  speculative-simple.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/depende
  ncies/llama.cpp/build/examples/speculative-simple/Release/llama-speculative-simple.lib" /MACHINE:X64  /machine:x64 "l
  lama-speculative-simple.dir\Release\speculative-simple.obj"
  llama-speculative-simple.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-speculat
  ive-simple.exe
FinalizeBuildStatus:
  Deleting file "llama-speculative-simple.dir\Release\llama-sp.9F6BB209.tlog\unsuccessfulbuild".
  Touching "llama-speculative-simple.dir\Release\llama-sp.9F6BB209.tlog\llama-speculative-simple.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative-simple\llama-specula
tive-simple.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\tokenize\llama-tokenize.vcxproj" (54) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-tokenize.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-tokenize.dir\Release\llama-tokenize.tlog\".
InitializeBuildStatus:
  Creating "llama-tokenize.dir\Release\llama-tokenize.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-tokenize.dir\Release\llama-tokenize.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/tokenize/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include
  /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-tokenize.di
  r\Release\\" /Fd"llama-tokenize.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEU
  RAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp
  tokenize.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(97,77): warning C4267: 'argument': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\t
okenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(101,57): warning C4267: 'argument': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
tokenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(153,91): warning C4267: 'argument': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
tokenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(158,25): warning C4267: 'initializing':
 conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\tokenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(175,52): warning C4267: 'argument': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
tokenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(188,31): warning C4267: 'initializing':
 conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\tokenize\llama-tokenize.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(188,20): warning C4267: 'initializing':
 conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\tokenize\llama-tokenize.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tokenize\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-tokenize.exe" /INCREMENTAL:NO
   /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib
  ..\..\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggm
  l-cuda\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib s
  hell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAcce
  ss='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-tokenize.p
  db" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/buil
  d/examples/tokenize/Release/llama-tokenize.lib" /MACHINE:X64  /machine:x64 "llama-tokenize.dir\Release\tokenize.obj"
  llama-tokenize.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-tokenize.exe
FinalizeBuildStatus:
  Deleting file "llama-tokenize.dir\Release\llama-tokenize.tlog\unsuccessfulbuild".
  Touching "llama-tokenize.dir\Release\llama-tokenize.tlog\llama-tokenize.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tokenize\llama-tokenize.vcxproj"
 (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxproj" (55) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-tts.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-tts.dir\Release\llama-tts.tlog\".
InitializeBuildStatus:
  Creating "llama-tts.dir\Release\llama-tts.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-tts.dir\Release\llama-tts.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/tts/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\examples /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /I"C:\Program Files\NVIDIA GPU Computing Toolk
  it\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_
  SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_I
  NTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-tts.dir\Rel
  ease\\" /Fd"llama-tts.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\a
  uryn_core\dependencies\llama.cpp\examples\tts\tts.cpp
  tts.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(40,41): warning C4244: '=': conversion from 'doub
le' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(101,36): warning C4267: '=': conversion from 'siz
e_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tt
s.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(120,56): warning C4244: 'argument': conversion fr
om 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llam
a-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(120,25): warning C4244: '=': conversion from 'dou
ble' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(126,17): warning C4244: 'initializing': conversio
n from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\
llama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(212,31): warning C4267: 'argument': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-
tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(357,36): warning C4101: 'e': unreferenced local v
ariable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(826,54): warning C4267: 'argument': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\ll
ama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(835,52): warning C4267: 'argument': conversion fr
om 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\
llama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1014,35): warning C4267: 'initializing': conversi
on from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\l
lama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1014,23): warning C4267: 'initializing': conversi
on from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\tts\llama-tts.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1019,43): warning C4267: 'argument': conversion f
rom 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts
\llama-tts.vcxproj]
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-tts.exe" /INCREMENTAL:NO /NOL
  OGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\..
  \src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cud
  a\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell3
  2.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='f
  alse'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-tts.pdb" /SUBSY
  STEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples
  /tts/Release/llama-tts.lib" /MACHINE:X64  /machine:x64 "llama-tts.dir\Release\tts.obj"
  llama-tts.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-tts.exe
FinalizeBuildStatus:
  Deleting file "llama-tts.dir\Release\llama-tts.tlog\unsuccessfulbuild".
  Touching "llama-tts.dir\Release\llama-tts.tlog\llama-tts.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxproj" (default
targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\pocs\vdot\llama-vdot.vcxproj" (56) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llama-vdot.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llama-vdot.dir\Release\llama-vdot.tlog\".
InitializeBuildStatus:
  Creating "llama-vdot.dir\Release\llama-vdot.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llama-vdot.dir\Release\llama-vdot.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/pocs/vdot/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\pocs /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURA
  L_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:
  \NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\C
  UDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECU
  RE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDI
  R=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /std:c++17 /Fo"llama-vdot.dir\Releas
  e\\" /Fd"llama-vdot.dir\Release\vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj D:\NEURAL_CORE\aur
  yn_core\dependencies\llama.cpp\pocs\vdot\vdot.cpp
  vdot.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-vdot.exe" /INCREMENTAL:NO /NO
  LOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\common\Release\common.lib ..\.
  .\src\Release\llama.lib ..\..\ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cu
  da\Release\ggml-cuda.lib" "..\..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell
  32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='
  false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llama-vdot.pdb" /SUB
  SYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/pocs/v
  dot/Release/llama-vdot.lib" /MACHINE:X64  /machine:x64 "llama-vdot.dir\Release\vdot.obj"
  llama-vdot.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llama-vdot.exe
FinalizeBuildStatus:
  Deleting file "llama-vdot.dir\Release\llama-vdot.tlog\unsuccessfulbuild".
  Touching "llama-vdot.dir\Release\llama-vdot.tlog\llama-vdot.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\pocs\vdot\llama-vdot.vcxproj" (default ta
rgets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llava_shared.vcxproj" (57) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llava_shared.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llava_shared.dir\Release\llava_shared.tlog\".
InitializeBuildStatus:
  Creating "llava_shared.dir\Release\llava_shared.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llava_shared.dir\Release\llava_shared.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llava_shared.dll" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\src\Release\llama.lib ..\..\
  ggml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\
  ..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib
  uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"
  D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/llava_shared.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYN
  AMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llava_share
  d.lib" /MACHINE:X64  /machine:x64 /DLL D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.di
  r\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llava_shared.lib an
  d object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/llava_shared.exp
  llava_shared.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\llava_shared.dll
FinalizeBuildStatus:
  Deleting file "llava_shared.dir\Release\llava_shared.tlog\unsuccessfulbuild".
  Touching "llava_shared.dir\Release\llava_shared.tlog\llava_shared.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava_shared.vcxproj" (def
ault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\llava_static.vcxproj" (58) on node 1 (default targets).
PrepareForBuild:
  Creating directory "llava_static.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "llava_static.dir\Release\llava_static.tlog\".
InitializeBuildStatus:
  Creating "llava_static.dir\Release\llava_static.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "llava_static.dir\Release\llava_static.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"D:\NE
  URAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\Release\llava_static.lib" /NOLOGO /MACHINE:X64  /mac
  hine:x64 D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\llava.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.dir\Release\clip.obj
  llava_static.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\Release\llava_static.li
  b
FinalizeBuildStatus:
  Deleting file "llava_static.dir\Release\llava_static.tlog\unsuccessfulbuild".
  Touching "llava_static.dir\Release\llava_static.tlog\llava_static.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava_static.vcxproj" (def
ault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\mtmd_shared.vcxproj" (59) on node 1 (default targets).
PrepareForBuild:
  Creating directory "mtmd_shared.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "mtmd_shared.dir\Release\mtmd_shared.tlog\".
InitializeBuildStatus:
  Creating "mtmd_shared.dir\Release\mtmd_shared.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "mtmd_shared.dir\Release\mtmd_shared.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\mtmd_shared.dll" /INCREMENTAL:NO /N
  OLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\..\src\Release\llama.lib ..\..\g
  gml\src\Release\ggml.lib "..\..\ggml\src\Release\ggml-cpu.lib" "..\..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\.
  .\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib u
  uid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"D
  :/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/mtmd_shared.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAM
  ICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/mtmd_shared.l
  ib" /MACHINE:X64  /machine:x64 /DLL D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Re
  lease\mtmd.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\clip.obj
     Creating library D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/mtmd_shared.lib and
   object D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/examples/llava/Release/mtmd_shared.exp
  mtmd_shared.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\mtmd_shared.dll
FinalizeBuildStatus:
  Deleting file "mtmd_shared.dir\Release\mtmd_shared.tlog\unsuccessfulbuild".
  Touching "mtmd_shared.dir\Release\mtmd_shared.tlog\mtmd_shared.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd_shared.vcxproj" (defa
ult targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\examples\llava\mtmd_static.vcxproj" (60) on node 1 (default targets).
PrepareForBuild:
  Creating directory "mtmd_static.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "mtmd_static.dir\Release\mtmd_static.tlog\".
InitializeBuildStatus:
  Creating "mtmd_static.dir\Release\mtmd_static.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "mtmd_static.dir\Release\mtmd_static.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/examples/llava/CMakeLists.txt
Lib:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\Lib.exe /OUT:"D:\NE
  URAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\Release\mtmd_static.lib" /NOLOGO /MACHINE:X64  /mach
  ine:x64 D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\mtmd.obj
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.dir\Release\clip.obj
  mtmd_static.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\Release\mtmd_static.lib
FinalizeBuildStatus:
  Deleting file "mtmd_static.dir\Release\mtmd_static.tlog\unsuccessfulbuild".
  Touching "mtmd_static.dir\Release\mtmd_static.tlog\mtmd_static.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd_static.vcxproj" (defa
ult targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-autorelease.vcxproj" (61) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-autorelease.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-autorelease.dir\Release\test-autorelease.tlog\".
InitializeBuildStatus:
  Creating "test-autorelease.dir\Release\test-autorelease.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-autorelease.dir\Release\test-autorelease.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-autorelease.dir\Release\\" /Fd"test-autorelease.dir\Release\vc143.pdb" /
  external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-a
  utorelease.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-autorelease.cpp
  get-model.cpp
  Generating Code...
MakeDirsForLink:
  Creating directory "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\Release\".
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-autorelease.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib .
  .\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Releas
  e\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32
  .lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /man
  ifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-autorelease.pdb" /SUBSYSTEM
  :CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Releas
  e/test-autorelease.lib" /MACHINE:X64  /machine:x64 "test-autorelease.dir\Release\test-autorelease.obj"
  "test-autorelease.dir\Release\get-model.obj"
  test-autorelease.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-autorelease.exe
FinalizeBuildStatus:
  Deleting file "test-autorelease.dir\Release\test-autorelease.tlog\unsuccessfulbuild".
  Touching "test-autorelease.dir\Release\test-autorelease.tlog\test-autorelease.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-autorelease.vcxproj" (default
targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj" (62) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-backend-ops.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-backend-ops.dir\Release\test-backend-ops.tlog\".
InitializeBuildStatus:
  Creating "test-backend-ops.dir\Release\test-backend-ops.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-backend-ops.dir\Release\test-backend-ops.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-backend-ops.dir\Release\\" /Fd"test-backend-ops.dir\Release\vc143.pdb" /
  external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-b
  ackend-ops.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-backend-ops.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244: 'argument': convers
ion from 'uint64_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267: 'argument': convers
ion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(736,38): warning C4244: 'argument': convers
ion from 'uint64_t' to 'double', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244: '=': conversion fro
m 'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-o
ps.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:             _Ty=flo
at [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244: '=': conversion fr
om 'int' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:             _Ty=fl
oat [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244: 'argument': conve
rsion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         with [D:\
NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         [ [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:             _Ty=i
nt64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         ] [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244: 'argument': conve
rsion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         with [D:\
NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         [ [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:             _Ty=i
nt64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         ] [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1935,75): warning C4244: 'argument': conver
sion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244: 'initializing': co
nversion from '_Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-
backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244: 'initializing': co
nversion from '_Ty' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2677,85): warning C4244: 'argument': conver
sion from 'const int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2677,81): warning C4244: 'argument': conver
sion from 'const int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244: '=': conversion fr
om 'int' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:             _Ty=fl
oat [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244: 'argument': conver
sion from '_Ty' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-ba
ckend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244: 'argument': conver
sion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3299,77): warning C4244: 'argument': conver
sion from 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tes
ts\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244: 'initializing': co
nversion from 'const _Elem' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\t
ests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:             _Elem=
int [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4367,124): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4370,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4371,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4372,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4376,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4377,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4378,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4379,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4380,128): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4384,148): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4385,148): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4386,148): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4389,124): warning C4244: 'argument': conve
rsion from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-b
ackend-ops.vcxproj]
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-backend-ops.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib .
  .\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Releas
  e\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32
  .lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /man
  ifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-backend-ops.pdb" /SUBSYSTEM
  :CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Releas
  e/test-backend-ops.lib" /MACHINE:X64  /machine:x64 "test-backend-ops.dir\Release\test-backend-ops.obj"
  "test-backend-ops.dir\Release\get-model.obj"
  test-backend-ops.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-backend-ops.exe
FinalizeBuildStatus:
  Deleting file "test-backend-ops.dir\Release\test-backend-ops.tlog\unsuccessfulbuild".
  Touching "test-backend-ops.dir\Release\test-backend-ops.tlog\test-backend-ops.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj" (default
targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-barrier.vcxproj" (63) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-barrier.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-barrier.dir\Release\test-barrier.tlog\".
InitializeBuildStatus:
  Creating "test-barrier.dir\Release\test-barrier.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-barrier.dir\Release\test-barrier.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-barrier.dir\Release\\" /Fd"test-barrier.dir\Release\vc143.pdb" /external
  :W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-barrier.c
  pp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-barrier.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-barrier.exe" /INCREMENTAL:NO /
  NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib ..\sr
  c\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\gg
  ml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib
   oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifes
  t:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-barrier.pdb" /SUBSYSTEM:CONSOLE
   /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Release/test-b
  arrier.lib" /MACHINE:X64  /machine:x64 "test-barrier.dir\Release\test-barrier.obj"
  "test-barrier.dir\Release\get-model.obj"
  test-barrier.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-barrier.exe
FinalizeBuildStatus:
  Deleting file "test-barrier.dir\Release\test-barrier.tlog\unsuccessfulbuild".
  Touching "test-barrier.dir\Release\test-barrier.tlog\test-barrier.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-barrier.vcxproj" (default targ
ets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-c.vcxproj" (64) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-c.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-c.dir\Release\test-c.tlog\".
InitializeBuildStatus:
  Creating "test-c.dir\Release\test-c.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-c.dir\Release\test-c.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID
  :\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\
  CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SEC
  URE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_USE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTD
  IR=\"Release\"" /MD /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"test-c.dir\Release\\" /Fd"test-c.dir\Rele
  ase\vc143.pdb" /external:W3 /Gd /TC /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.
  cpp\tests\test-c.c"
  test-c.c
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-c.exe" /INCREMENTAL:NO /NOLOGO
   /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\src\Release\llama.lib ..\ggml\src\Rel
  ease\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\ggml-cuda.lib" "..\ggml\src\Release\g
  gml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib
   advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_
  core/dependencies/llama.cpp/build/bin/Release/test-c.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:
  "D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Release/test-c.lib" /MACHINE:X64  /machine:x64 "test-c.
  dir\Release\test-c.obj"
  test-c.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-c.exe
FinalizeBuildStatus:
  Deleting file "test-c.dir\Release\test-c.tlog\unsuccessfulbuild".
  Touching "test-c.dir\Release\test-c.tlog\test-c.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-c.vcxproj" (default targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-chat-template.vcxproj" (65) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-chat-template.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-chat-template.dir\Release\test-cha.63A22B16.tlog\".
InitializeBuildStatus:
  Creating "test-chat-template.dir\Release\test-cha.63A22B16.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifi
  ed.
  Touching "test-chat-template.dir\Release\test-cha.63A22B16.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-chat-template.dir\Release\\" /Fd"test-chat-template.dir\Release\vc143.pd
  b" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\te
  st-chat-template.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-chat-template.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-chat-template.cpp(309,147): warning C4267: 'argument': conv
ersion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-chat-template.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-chat-template.cpp(322,32): warning C4267: 'argument': conve
rsion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-chat-template.vcxproj]
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-chat-template.exe" /INCREMENTA
  L:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib
   ..\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Rele
  ase\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole
  32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /m
  anifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-chat-template.pdb" /SUBSY
  STEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Re
  lease/test-chat-template.lib" /MACHINE:X64  /machine:x64 "test-chat-template.dir\Release\test-chat-template.obj"
  "test-chat-template.dir\Release\get-model.obj"
  test-chat-template.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-chat-template.e
  xe
FinalizeBuildStatus:
  Deleting file "test-chat-template.dir\Release\test-cha.63A22B16.tlog\unsuccessfulbuild".
  Touching "test-chat-template.dir\Release\test-cha.63A22B16.tlog\test-chat-template.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-chat-template.vcxproj" (defaul
t targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj" (66) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-gguf.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-gguf.dir\Release\test-gguf.tlog\".
InitializeBuildStatus:
  Creating "test-gguf.dir\Release\test-gguf.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-gguf.dir\Release\test-gguf.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-gguf.dir\Release\\" /Fd"test-gguf.dir\Release\vc143.pdb" /external:W3 /G
  d /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp" "D:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-gguf.cpp
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(385,19): warning C4319: '~': zero extending 'uint3
2_t' to 'size_t' of greater size [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(475,37): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(475,22): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(578,43): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(578,28): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(587,40): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(587,22): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(612,28): warning C4319: '~': zero extending 'uint3
2_t' to 'size_t' of greater size [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(643,9): warning C4267: 'argument': conversion from
 'size_t' to 'long', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(820,96): warning C4244: 'argument': conversion fro
m 'unsigned int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-g
guf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(825,96): warning C4244: 'argument': conversion fro
m 'unsigned int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-g
guf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(922,35): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(922,20): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(926,44): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(926,29): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1003,45): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-ggu
f.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1003,25): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-gguf.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1007,47): warning C4244: 'initializing': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-ggu
f.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1007,29): warning C4244: 'initializing': conversio
n from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-gguf.vcxproj]
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-gguf.exe" /INCREMENTAL:NO /NOL
  OGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib ..\src\R
  elease\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\ggml-
  cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib ol
  eaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:e
  mbed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-gguf.pdb" /SUBSYSTEM:CONSOLE /TLBI
  D:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Release/test-gguf.li
  b" /MACHINE:X64  /machine:x64 "test-gguf.dir\Release\test-gguf.obj"
  "test-gguf.dir\Release\get-model.obj"
  test-gguf.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-gguf.exe
FinalizeBuildStatus:
  Deleting file "test-gguf.dir\Release\test-gguf.tlog\unsuccessfulbuild".
  Touching "test-gguf.dir\Release\test-gguf.tlog\test-gguf.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj" (default targets
).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-log.vcxproj" (67) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-log.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-log.dir\Release\test-log.tlog\".
InitializeBuildStatus:
  Creating "test-log.dir\Release\test-log.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-log.dir\Release\test-log.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-log.dir\Release\\" /Fd"test-log.dir\Release\vc143.pdb" /external:W3 /Gd
  /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-log.cpp" "D:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-log.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-log.exe" /INCREMENTAL:NO /NOLO
  GO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib ..\src\Re
  lease\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\ggml-c
  uda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib ole
  aut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:em
  bed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-log.pdb" /SUBSYSTEM:CONSOLE /TLBID:
  1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Release/test-log.lib"
  /MACHINE:X64  /machine:x64 "test-log.dir\Release\test-log.obj"
  "test-log.dir\Release\get-model.obj"
  test-log.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-log.exe
FinalizeBuildStatus:
  Deleting file "test-log.dir\Release\test-log.tlog\unsuccessfulbuild".
  Touching "test-log.dir\Release\test-log.tlog\test-log.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-log.vcxproj" (default targets)
.

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-model-load-cancel.vcxproj" (68) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-model-load-cancel.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-model-load-cancel.dir\Release\test-mod.457002D4.tlog\".
InitializeBuildStatus:
  Creating "test-model-load-cancel.dir\Release\test-mod.457002D4.tlog\unsuccessfulbuild" because "AlwaysCreate" was spe
  cified.
  Touching "test-model-load-cancel.dir\Release\test-mod.457002D4.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-model-load-cancel.dir\Release\\" /Fd"test-model-load-cancel.dir\Release\
  vc143.pdb" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\
  tests\test-model-load-cancel.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-model-load-cancel.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-model-load-cancel.exe" /INCREM
  ENTAL:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common
  .lib ..\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\
  Release\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib
   ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'
  " /manifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-model-load-cancel.pdb
  " /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/
  tests/Release/test-model-load-cancel.lib" /MACHINE:X64  /machine:x64 "test-model-load-cancel.dir\Release\test-model-l
  oad-cancel.obj"
  "test-model-load-cancel.dir\Release\get-model.obj"
  test-model-load-cancel.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-model-load-
  cancel.exe
FinalizeBuildStatus:
  Deleting file "test-model-load-cancel.dir\Release\test-mod.457002D4.tlog\unsuccessfulbuild".
  Touching "test-model-load-cancel.dir\Release\test-mod.457002D4.tlog\test-model-load-cancel.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-model-load-cancel.vcxproj" (de
fault targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-quantize-fns.vcxproj" (69) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-quantize-fns.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-quantize-fns.dir\Release\test-qua.C81D46FB.tlog\".
InitializeBuildStatus:
  Creating "test-quantize-fns.dir\Release\test-qua.C81D46FB.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifie
  d.
  Touching "test-quantize-fns.dir\Release\test-qua.C81D46FB.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-quantize-fns.dir\Release\\" /Fd"test-quantize-fns.dir\Release\vc143.pdb"
   /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test
  -quantize-fns.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-quantize-fns.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-quantize-fns.exe" /INCREMENTAL
  :NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib
  ..\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Relea
  se\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole3
  2.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /ma
  nifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-quantize-fns.pdb" /SUBSYST
  EM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Rele
  ase/test-quantize-fns.lib" /MACHINE:X64  /machine:x64 "test-quantize-fns.dir\Release\test-quantize-fns.obj"
  "test-quantize-fns.dir\Release\get-model.obj"
  test-quantize-fns.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-quantize-fns.exe
FinalizeBuildStatus:
  Deleting file "test-quantize-fns.dir\Release\test-qua.C81D46FB.tlog\unsuccessfulbuild".
  Touching "test-quantize-fns.dir\Release\test-qua.C81D46FB.tlog\test-quantize-fns.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-quantize-fns.vcxproj" (default
 targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-quantize-perf.vcxproj" (70) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-quantize-perf.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-quantize-perf.dir\Release\test-qua.AA8EF116.tlog\".
InitializeBuildStatus:
  Creating "test-quantize-perf.dir\Release\test-qua.AA8EF116.tlog\unsuccessfulbuild" because "AlwaysCreate" was specifi
  ed.
  Touching "test-quantize-perf.dir\Release\test-qua.AA8EF116.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-quantize-perf.dir\Release\\" /Fd"test-quantize-perf.dir\Release\vc143.pd
  b" /external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\te
  st-quantize-perf.cpp" "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-quantize-perf.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-quantize-perf.exe" /INCREMENTA
  L:NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib
   ..\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Rele
  ase\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole
  32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /m
  anifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-quantize-perf.pdb" /SUBSY
  STEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Re
  lease/test-quantize-perf.lib" /MACHINE:X64  /machine:x64 "test-quantize-perf.dir\Release\test-quantize-perf.obj"
  "test-quantize-perf.dir\Release\get-model.obj"
  test-quantize-perf.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-quantize-perf.e
  xe
FinalizeBuildStatus:
  Deleting file "test-quantize-perf.dir\Release\test-qua.AA8EF116.tlog\unsuccessfulbuild".
  Touching "test-quantize-perf.dir\Release\test-qua.AA8EF116.tlog\test-quantize-perf.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-quantize-perf.vcxproj" (defaul
t targets).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-rope.vcxproj" (71) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-rope.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-rope.dir\Release\test-rope.tlog\".
InitializeBuildStatus:
  Creating "test-rope.dir\Release\test-rope.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-rope.dir\Release\test-rope.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-rope.dir\Release\\" /Fd"test-rope.dir\Release\vc143.pdb" /external:W3 /G
  d /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-rope.cpp" "D:\N
  EURAL_CORE\auryn_core\dependencies\llama.cpp\tests\get-model.cpp"
  test-rope.cpp
  get-model.cpp
  Generating Code...
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-rope.exe" /INCREMENTAL:NO /NOL
  OGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib ..\src\R
  elease\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Release\ggml-
  cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib ol
  eaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:e
  mbed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-rope.pdb" /SUBSYSTEM:CONSOLE /TLBI
  D:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Release/test-rope.li
  b" /MACHINE:X64  /machine:x64 "test-rope.dir\Release\test-rope.obj"
  "test-rope.dir\Release\get-model.obj"
  test-rope.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-rope.exe
FinalizeBuildStatus:
  Deleting file "test-rope.dir\Release\test-rope.tlog\unsuccessfulbuild".
  Touching "test-rope.dir\Release\test-rope.tlog\test-rope.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-rope.vcxproj" (default targets
).

Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (1) is building "D:\NEURAL_CORE\aury
n_core\dependencies\llama.cpp\build\tests\test-tokenizer-0.vcxproj" (72) on node 1 (default targets).
PrepareForBuild:
  Creating directory "test-tokenizer-0.dir\Release\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "test-tokenizer-0.dir\Release\test-tokenizer-0.tlog\".
InitializeBuildStatus:
  Creating "test-tokenizer-0.dir\Release\test-tokenizer-0.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "test-tokenizer-0.dir\Release\test-tokenizer-0.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/tests/CMakeLists.txt
ClCompile:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\CL.exe /c /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\common\. /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\. /ID:\NEUR
  AL_CORE\auryn_core\dependencies\llama.cpp\src\..\include /ID:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\
  ..\include /I"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\include" /nologo /W3 /WX- /diagnostics:column
  /O2 /Ob2 /D _MBCS /D WIN32 /D _WINDOWS /D NDEBUG /D _CRT_SECURE_NO_WARNINGS /D LLAMA_SHARED /D GGML_USE_CPU /D GGML_U
  SE_CUDA /D GGML_SHARED /D GGML_BACKEND_SHARED /D "CMAKE_INTDIR=\"Release\"" /EHsc /MD /GS /fp:precise /Zc:wchar_t /Zc
  :forScope /Zc:inline /GR /std:c++17 /Fo"test-tokenizer-0.dir\Release\\" /Fd"test-tokenizer-0.dir\Release\vc143.pdb" /
  external:W3 /Gd /TP /errorReport:queue  /utf-8 /bigobj "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-t
  okenizer-0.cpp"
  test-tokenizer-0.cpp
Link:
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\bin\HostX64\x64\link.exe /ERRORREPO
  RT:QUEUE /OUT:"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-tokenizer-0.exe" /INCREMENTAL:
  NO /NOLOGO /LIBPATH:"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v12.8\lib\x64" ..\common\Release\common.lib .
  .\src\Release\llama.lib ..\ggml\src\Release\ggml.lib "..\ggml\src\Release\ggml-cpu.lib" "..\ggml\src\ggml-cuda\Releas
  e\ggml-cuda.lib" "..\ggml\src\Release\ggml-base.lib" kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32
  .lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /man
  ifest:embed /PDB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/bin/Release/test-tokenizer-0.pdb" /SUBSYSTEM
  :CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/build/tests/Releas
  e/test-tokenizer-0.lib" /MACHINE:X64  /machine:x64 "test-tokenizer-0.dir\Release\test-tokenizer-0.obj"
  test-tokenizer-0.vcxproj -> D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\bin\Release\test-tokenizer-0.exe
FinalizeBuildStatus:
  Deleting file "test-tokenizer-0.dir\Release\test-tokenizer-0.tlog\unsuccessfulbuild".
  Touching "test-tokenizer-0.dir\Release\test-tokenizer-0.tlog\test-tokenizer-0.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-tokenizer-0.vcxproj" (default
targets).

PrepareForBuild:
  Creating directory "x64\Release\ALL_BUILD\".
  Structured output is enabled. The formatting of compiler diagnostics will reflect the error hierarchy. See https://ak
  a.ms/cpp/structured-output for more details.
  Creating directory "x64\Release\ALL_BUILD\ALL_BUILD.tlog\".
InitializeBuildStatus:
  Creating "x64\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
  Touching "x64\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild".
CustomBuild:
  Building Custom Rule D:/NEURAL_CORE/auryn_core/dependencies/llama.cpp/CMakeLists.txt
FinalizeBuildStatus:
  Deleting file "x64\Release\ALL_BUILD\ALL_BUILD.tlog\unsuccessfulbuild".
  Touching "x64\Release\ALL_BUILD\ALL_BUILD.tlog\ALL_BUILD.lastbuildstate".
Done Building Project "D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default targets).


Build succeeded.

"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj" (default target) (6) ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(1959,26): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(1959,31): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(1959,36): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(1959,41): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(2875,26): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(2875,31): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(2875,36): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(2875,41): warning C4267: 'initializing': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3263,22): warning C4244: '=': conversion from 'int64
_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3264,22): warning C4244: '=': conversion from 'int64
_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3265,22): warning C4244: '=': conversion from 'int64
_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3266,22): warning C4244: '=': conversion from 'int64
_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3268,22): warning C4267: '=': conversion from 'size_
t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3269,22): warning C4267: '=': conversion from 'size_
t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3270,22): warning C4267: '=': conversion from 'size_
t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3271,22): warning C4267: '=': conversion from 'size_
t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3910,48): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(3942,52): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4016,41): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4016,51): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4025,51): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4025,65): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4086,35): warning C4244: 'return': conversion from '
float' to 'int64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4099,54): warning C4244: 'function': conversion from
 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcx
proj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4136,46): warning C4244: 'initializing': conversion
from 'float' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4136,50): warning C4244: 'initializing': conversion
from 'float' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4159,46): warning C4244: 'initializing': conversion
from 'float' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4159,50): warning C4244: 'initializing': conversion
from 'float' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4199,47): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4199,72): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4199,93): warning C4244: 'function': conversion from
 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4199,103): warning C4244: 'function': conversion fro
m 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4571,36): warning C4244: 'initializing': conversion
from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\g
gml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(4572,36): warning C4244: 'initializing': conversion
from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\g
gml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(5643,108): warning C4244: 'function': conversion fro
m 'const int32_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\gg
ml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(5643,112): warning C4244: 'function': conversion fro
m 'const int32_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\gg
ml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml.c(5921,29): warning C4267: 'initializing': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-bas
e.vcxproj]
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h(21,9): warning C4005: 'static_assert': macr
o redefinition [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.vcxproj" (default target) (6) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-opt.cpp(599,77): warning C4244: 'argument': conversion
 from 'int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-opt.cpp(600,77): warning C4244: 'argument': conversion
 from 'int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml
-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-opt.cpp(810,30): warning C4244: '=': conversion from '
const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggm
l-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\gguf.cpp(457,48): warning C4244: 'initializing': conversion
 from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-b
ase.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\gguf.cpp(457,33): warning C4244: 'initializing': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\
ggml-base.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\gguf.cpp(592,21): warning C4267: 'argument': conversion fro
m 'size_t' to 'long', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-base.
vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cpu.vcxproj" (default target) (7) ->
  C:\Program Files (x86)\Windows Kits\10\Include\10.0.26100.0\ucrt\assert.h(21,9): warning C4005: 'static_assert': macr
o redefinition [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cpu.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (default target) (8) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (CudaBuildCore target) (8
:13) ->
(CudaBuildCore target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(17): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(62): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(17): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(17): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(62): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\cross-entropy-loss.cu(62): warning #221-D: floati
ng-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggm
l\src\ggml-cuda\ggml-cuda.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (default target) (8) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (CudaBuildCore target) (8
:34) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(48): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-cuda\softmax.cu(68): warning #221-D: floating-point va
lue does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-
cuda\ggml-cuda.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (default target) (8) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj" (CudaBuildCore target) (8
:37) ->
  C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v12.8/include\cuda/std/detail/libcxx/include/cmath(1032): warning
#221-D: floating-point value does not fit in required floating-point type [D:\NEURAL_CORE\auryn_core\dependencies\llama
.cpp\build\ggml\src\ggml-cuda\ggml-cuda.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\src\ggml.vcxproj" (default target) (5) ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\ggml\src\ggml-backend-reg.cpp(456,64): warning C4267: 'argument': co
nversion from 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ggml\s
rc\ggml.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj" (default target) (9) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-adapter.cpp(66,61): warning C4267: 'argument': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-adapter.cpp(167,20): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-adapter.cpp(171,20): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-adapter.cpp(195,19): warning C4244: 'initializing': conver
sion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(130,37): warning C4267: '=': conversion from 'si
ze_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(132,24): warning C4267: '+=': conversion from 's
ize_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(133,28): warning C4267: '+=': conversion from 's
ize_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(289,40): warning C4267: '=': conversion from 'si
ze_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(289,40): warning C4267:         with [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(289,40): warning C4267:         [ [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(289,40): warning C4267:             _Ty=llama_toke
n [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-batch.cpp(289,40): warning C4267:         ] [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-chat.cpp(628,21): warning C4267: 'return': conversion from
 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(281,103): warning C4267: 'argument': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(413,21): warning C4244: '+=': conversion from
'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1257,24): warning C4244: 'argument': conversio
n from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1442,34): warning C4244: '=': conversion from
'int64_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1442,34): warning C4244:         with [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1442,34): warning C4244:         [ [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1442,34): warning C4244:             _Ty=llama_t
oken [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1442,34): warning C4244:         ] [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1454,17): warning C4244: '=': conversion from
'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1553,27): warning C4244: '=': conversion from
'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1555,12): warning C4244: 'return': conversion
from 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1601,38): warning C4267: 'argument': conversio
n from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1601,38): warning C4267:         with [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1601,38): warning C4267:         [ [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1601,38): warning C4267:             _Ty=int32_t
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(1601,38): warning C4267:         ] [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(2053,37): warning C4267: '=': conversion from
'size_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(2053,37): warning C4267:         with [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(2053,37): warning C4267:         [ [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(2053,37): warning C4267:             _Ty=llama_t
oken [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-context.cpp(2053,37): warning C4267:         ] [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(26,52): warning C4244: '+=': conversion from 'ui
nt64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(32,90): warning C4244: 'argument': conversion fr
om 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(32,59): warning C4244: 'argument': conversion fr
om 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(32,40): warning C4244: 'initializing': conversio
n from 'float' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(33,90): warning C4244: 'argument': conversion fr
om 'uint64_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(33,90): warning C4244:         with [D:\NEURAL_COR
E\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(33,90): warning C4244:         [ [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(33,90): warning C4244:             _Ty=int32_t [D:
\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(33,90): warning C4244:         ] [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(68,44): warning C4244: 'initializing': conversio
n from 'llama_pos' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(68,29): warning C4244: 'initializing': conversio
n from 'llama_pos' to 'const float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244: '=': conversion from 'dou
ble' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         with [D:\NEURAL_COR
E\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         [ [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:             _Ty=float [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(71,35): warning C4244:         ] [D:\NEURAL_CORE\a
uryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(145,36): warning C4244: '=': conversion from 'in
t64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(218,51): warning C4244: '=': conversion from 'in
t64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244: '=': conversion from 'in
t64_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         with [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         [ [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:             _Ty=llama_toke
n [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(249,55): warning C4244:         ] [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(348,60): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(348,42): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(352,68): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(352,50): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(358,49): warning C4244: '=': conversion from 'in
t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(387,60): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(387,42): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(391,68): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(391,50): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(397,49): warning C4244: '=': conversion from 'in
t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(409,36): warning C4244: 'initializing': conversi
on from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(466,37): warning C4244: '=': conversion from 'in
t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(497,28): warning C4244: 'initializing': conversi
on from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(506,28): warning C4244: 'initializing': conversi
on from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(540,24): warning C4244: 'initializing': conversi
on from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(876,72): warning C4244: 'argument': conversion f
rom 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1499,27): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1499,25): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\sr
c\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-graph.cpp(1606,35): warning C4244: 'argument': conversion
from 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-impl.cpp(141,27): warning C4267: 'initializing': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-io.cpp(4,23): warning C4267: 'initializing': conversion fr
om 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(128,39): warning C4267: '+=': conversion from
 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(670,29): warning C4244: '=': conversion from
'__int64' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(966,47): warning C4267: 'initializing': conve
rsion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(966,38): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1040,54): warning C4267: 'initializing': conv
ersion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1040,38): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1177,20): warning C4805: '!=': unsafe mix of
type 'uint32_t' and type 'bool' in operation [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1340,24): warning C4267: '+=': conversion fro
m 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-kv-cache.cpp(1370,38): warning C4267: '=': conversion from
 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpro
j]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-mmap.cpp(117,89): warning C4267: 'argument': conversion fr
om 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-mmap.cpp(140,99): warning C4267: 'argument': conversion fr
om 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(536,46): warning C4244: 'initializing': c
onversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(536,31): warning C4244: 'initializing': c
onversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(575,30): warning C4244: '=': conversion f
rom 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(576,33): warning C4267: '=': conversion f
rom 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(252,42): warning C4244: 'argument': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(264,38): warning C4244: 'initializing': c
onversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(264,23): warning C4244: 'initializing': c
onversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267: '=': conversion f
rom 'size_t' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:             T=uint3
2_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(277,26): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(396,38): warning C4244: 'initializing': c
onversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(396,23): warning C4244: 'initializing': c
onversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion f
rom 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion f
rom 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=uint
16_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(320,38): warning C4244: 'initializing': c
onversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(320,23): warning C4244: 'initializing': c
onversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244: '=': conversion f
rom 'const int64_t' to 'OT', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:             OT=uint
32_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(216,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244: '=': conversion f
rom 'const double' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:             T=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.cpp(226,30): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(337,61): warning C4267: 'argument': conversion f
rom 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1368,38): warning C4305: '=': truncation from 'd
ouble' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(795,17): warning C4065: switch statement contain
s 'default' but no 'case' labels [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(804,17): warning C4065: switch statement contain
s 'default' but no 'case' labels [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244: '=': conversion from 's
ize_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         with [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         [ [D:\NEURAL_CORE
\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:             _Ty=float [D:
\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1450,25): warning C4244:         ] [D:\NEURAL_CORE
\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1475,134): warning C4244: 'initializing': conver
sion from '__int64' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1475,29): warning C4244: 'initializing': convers
ion from '__int64' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(1575,48): warning C4101: 'e': unreferenced local
 variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3626,50): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3626,48): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3683,50): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3683,48): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3742,50): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3742,48): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3809,50): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3809,48): warning C4244: 'initializing': convers
ion from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(3840,54): warning C4101: 'e': unreferenced local
 variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4459,120): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4490,29): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4496,29): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4684,120): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4714,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4720,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4851,33): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4856,33): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4971,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(4977,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5096,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5102,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5226,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5232,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5377,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5383,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5743,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(5749,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6148,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6154,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6271,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6277,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6391,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6397,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6512,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6518,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6639,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6645,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6789,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6798,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6910,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(6919,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7049,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7055,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7144,120): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7179,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7185,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7317,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7323,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7540,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7546,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7669,17): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7675,17): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7796,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7802,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7896,116): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7987,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(7996,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8089,45): warning C4244: 'argument': conversion
from 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8122,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8127,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8205,45): warning C4244: 'argument': conversion
from 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8238,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8243,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8344,49): warning C4244: 'argument': conversion
from 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8385,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8393,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8526,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8532,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8689,39): warning C4244: 'argument': conversion
from 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8693,39): warning C4244: 'argument': conversion
from 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8853,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8867,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8964,120): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(8995,29): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9001,29): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9127,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9133,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9247,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9253,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9380,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9386,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9513,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9519,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9627,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9633,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9777,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9783,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9902,120): warning C4244: 'argument': conversion
 from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9932,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(9938,25): warning C4244: 'argument': conversion
from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10129,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10135,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10362,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10368,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10888,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(10894,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11021,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11027,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11165,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11171,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11266,120): warning C4244: 'argument': conversio
n from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11296,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11302,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11538,81): warning C4244: 'argument': conversion
 from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11841,68): warning C4305: 'argument': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(11875,37): warning C4305: 'argument': truncation
 from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12198,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12204,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12549,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12557,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12647,120): warning C4244: 'argument': conversio
n from 'const int64_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12677,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model.cpp(12683,25): warning C4244: 'argument': conversion
 from 'const int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-hparams.h(125,40): warning C4305: 'initializing': truncati
on from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(586,57): warning C4244: 'argument': conversion f
rom 'const double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(588,57): warning C4244: 'argument': conversion f
rom 'const int64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(638,30): warning C4244: 'initializing': conversi
on from '__int64' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(681,85): warning C4267: 'argument': conversion f
rom 'size_t' to 'uint16_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-quant.cpp(902,143): warning C4244: 'argument': conversion
from 'const int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\
llama.vcxproj]
  C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include\type_traits(1706,98): warni
ng C4244: 'argument': conversion from 'unsigned __int64' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dep
endencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(235,18): warning C4267: '=': conversion from
'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(524,28): warning C4267: 'return': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1064,32): warning C4244: '=': conversion from
 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1069,33): warning C4244: '/=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1150,24): warning C4267: '=': conversion from
 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1249,68): warning C4244: 'argument': conversi
on from 'const int32_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\l
lama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(1766,19): warning C4244: '+=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2053,38): warning C4244: '=': conversion from
 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2076,31): warning C4244: 'initializing': conv
ersion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2250,76): warning C4267: 'argument': conversi
on from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2364,103): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2367,103): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2371,103): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2374,103): warning C4267: 'argument': convers
ion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2380,25): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2381,25): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-sampling.cpp(2445,16): warning C4244: '=': conversion from
 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,52): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-model-loader.h(35,34): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src
\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(543,82): warning C4267: '=': conversion from 'si
ze_t' to 'llm_symbol::index', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(546,61): warning C4267: '=': conversion from 'si
ze_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(638,37): warning C4267: 'initializing': conversi
on from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxp
roj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(638,25): warning C4267: 'initializing': conversi
on from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1419,52): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1419,37): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1424,48): warning C4267: 'initializing': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1424,32): warning C4267: 'initializing': convers
ion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\lla
ma.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1460,66): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1460,51): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1669,40): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1669,25): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1675,40): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1675,25): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1681,42): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1681,27): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\ll
ama.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(1686,23): warning C4267: 'initializing': convers
ion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llam
a.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2152,26): warning C4244: 'return': conversion fr
om 'long' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxproj
]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2322,74): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(2325,70): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcx
proj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\src\llama-vocab.cpp(3019,20): warning C4267: 'return': conversion fr
om 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\src\llama.vcxpr
oj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj" (default target) (4) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(280,63): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(280,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(281,63): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(281,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(289,80): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(309,63): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(309,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(310,63): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(310,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(311,80): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(330,58): warning C4267: '=': conversion fro
m 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(331,58): warning C4267: '=': conversion fro
m 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(360,80): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava.cpp(401,24): warning C4244: 'initializing': con
version from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(354,95): warning C4267: 'argument': conversi
on from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,41): warning C4244: 'initializing': conv
ersion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,35): warning C4244: 'initializing': conv
ersion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,43): warning C4244: 'initializing': conv
ersion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,37): warning C4244: 'initializing': conv
ersion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,45): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,26): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,149): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,130): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,111): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,92): warning C4244: 'argument': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,23): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,43): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,149): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,130): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,111): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,92): warning C4244: 'argument': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,23): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,43): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,49): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,29): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1201,30): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1202,30): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1546,15): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1674,48): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1770,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1771,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1772,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1775,49): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1776,44): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1777,64): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1785,49): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1786,44): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1787,64): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\lla
va.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244: 'initializing': con
version from 'const _Ty' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244: 'initializing': con
version from 'const _Ty' to 'const uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244: '=': conversion fro
m 'float' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:             _Ty=uint8
_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,34): warning C4244: 'initializing': con
version from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,28): warning C4244: 'initializing': con
version from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2139,25): warning C4244: 'initializing': con
version from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2186,16): warning C4244: 'initializing': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2187,16): warning C4244: 'initializing': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2340,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2341,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244: '=': conversion fro
m 'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2367,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2368,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2446,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2518,48): warning C4244: '=': conversion fro
m 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2521,48): warning C4244: '=': conversion fro
m 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llava
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2643,20): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,45): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,25): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2787,68): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2790,56): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2793,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2796,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2810,56): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2813,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2816,55): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\llava.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5): warning C4297: 'clip_n_mmproj_embd'
: function assumed not to throw an exception but does [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llava.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj" (default target) (10) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(84,18): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(86,92): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(86,62): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(89,97): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(89,67): warning C4267: 'argument': conversio
n from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ll
ava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(276,57): warning C4267: '=': conversion from
 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mt
md.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\mtmd.cpp(312,30): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip-impl.h(312,27): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(354,95): warning C4267: 'argument': conversi
on from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,41): warning C4244: 'initializing': conv
ersion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(489,35): warning C4244: 'initializing': conv
ersion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,43): warning C4244: 'initializing': conv
ersion from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(490,37): warning C4244: 'initializing': conv
ersion from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,45): warning C4267: 'initializing': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(558,26): warning C4267: 'initializing': conv
ersion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,149): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,130): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,111): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(856,92): warning C4244: 'argument': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,23): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(870,43): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,149): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,130): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,111): warning C4244: 'argument': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lla
va\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(904,92): warning C4244: 'argument': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,23): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(919,43): warning C4244: 'initializing': conv
ersion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,49): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1117,29): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1201,30): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1202,30): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1496,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1505,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1514,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1523,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1532,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,36): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1541,21): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1546,15): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1674,48): warning C4267: 'argument': convers
ion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llav
a\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1770,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1771,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1772,107): warning C4244: '=': conversion fr
om 'int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1775,49): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1776,44): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1777,64): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1785,49): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1786,44): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1787,64): warning C4244: '=': conversion fro
m 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtm
d.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244: 'initializing': con
version from 'const _Ty' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,53): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244: 'initializing': con
version from 'const _Ty' to 'const uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1790,43): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244: '=': conversion fro
m 'float' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.v
cxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:             _Ty=uint8
_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1791,72): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,34): warning C4244: 'initializing': con
version from 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(1925,28): warning C4244: 'initializing': con
version from 'double' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2139,25): warning C4244: 'initializing': con
version from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2186,16): warning C4244: 'initializing': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2187,16): warning C4244: 'initializing': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2340,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2341,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244: '=': conversion fro
m 'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         with [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         [ [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:             _Ty=float
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2345,24): warning C4244:         ] [D:\NEURAL_
CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2367,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2368,11): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2446,20): warning C4267: 'initializing': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2518,48): warning C4244: '=': conversion fro
m 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2521,48): warning C4244: '=': conversion fro
m 'double' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\mtmd.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2643,20): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,45): warning C4244: 'initializing': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2669,25): warning C4244: 'initializing': con
version from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2787,68): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2790,56): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2793,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2796,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2810,56): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2813,46): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2816,55): warning C4244: 'return': conversio
n from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava
\mtmd.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\clip.cpp(2820,5): warning C4297: 'clip_n_mmproj_embd'
: function assumed not to throw an exception but does [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\mtmd.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj" (default target) (14) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\arg.cpp(2225,57): warning C4996: 'strdup': The POSIX name for
 this item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help for details. [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244: 'argument': conversi
on from 'T' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxpr
oj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         with [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         [ [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:             T=int64_t
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\minja.hpp(2592,57): warning C4244:         ] [D:\NEURAL_C
ORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\minja\chat-template.hpp(99,41): warning C4101: 'e': unreferen
ced local variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1697,58): warning C4244: '+=': conversion from 'doub
le' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1704,134): warning C4267: 'argument': conversion fro
m 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\chat.cpp(1716,130): warning C4267: 'argument': conversion fro
m 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\console.cpp(256,30): warning C4267: 'initializing': conversio
n from 'size_t' to 'DWORD', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\console.cpp(410,28): warning C4267: 'initializing': conversio
n from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.v
cxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(136,46): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(136,37): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(151,50): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(151,41): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(231,29): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(242,33): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\comm
on\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\json-schema-to-grammar.cpp(513,60): warning C4101: 'e': unref
erenced local variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(24,51): warning C4244: 'argument': conversion
 from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\co
mmon.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(104,16): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(151,34): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(151,24): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\commo
n\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(160,82): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(160,38): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\commo
n\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(174,77): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\comm
on.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(174,38): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\commo
n\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(206,50): warning C4267: 'initializing': conve
rsion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\
common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\ngram-cache.cpp(206,31): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\c
ommon\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(228,39): warning C4267: 'argument': conversion f
rom 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.
vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267: '=': conversion from 'si
ze_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         with [D:\NEURAL_CO
RE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         [ [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:             _Ty=llama_toke
n [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\sampling.cpp(420,19): warning C4267:         ] [D:\NEURAL_CORE\
auryn_core\dependencies\llama.cpp\build\common\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(213,50): warning C4267: 'argument': conversio
n from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\common\co
mmon.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(225,41): warning C4267: 'initializing': conve
rsion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\commo
n\common.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\common\speculative.cpp(225,28): warning C4267: 'initializing': conve
rsion from 'size_t' to 'const llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\common\common.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\batched\llama-batched.vcxproj" (default target) (15) -
>
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(58,45): warning C4267: 'initializing':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\batched\llama-batched.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(58,24): warning C4267: 'initializing':
conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\batched\llama-batched.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(105,50): warning C4267: 'argument': con
version from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\batched\llama-batched.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\batched\batched.cpp(114,49): warning C4267: 'argument': con
version from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\batched\llama-batched.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj" (default target) (17)
 ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(1006,31): warning C4267: '=': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\llama-bench\llama-bench.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244: 'initial
izing': conversion from 'double' to 'T', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         wi
th [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         [
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:
  T=uint64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llama-bench\llama-bench.cpp(70,14): warning C4244:         ]
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llama-bench\llama-bench.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\main\llama-cli.vcxproj" (default target) (18) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\main\main.cpp(399,19): warning C4804: '>': unsafe use of ty
pe 'bool' in operation [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\main\llama-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj" (de
fault target) (20) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(26,43): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(38,23): warning C4305: 'initializ
ing': truncation from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\cvector-gene
rator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(308,26): warning C4267: '=': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\c
vector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\pca.hpp(309,39): warning C4267: '=': conv
ersion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\c
vector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(101,41): warning C4
244: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\
dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(102,41): warning C4
244: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\
dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(103,50): warning C4
244: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\
dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(108,60): warning C4
244: 'argument': conversion from 'float' to 'const unsigned __int64', possible loss of data [D:\NEURAL_CORE\auryn_core\
dependencies\llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(119,24): warning C4
244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\
llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(129,45): warning C4
305: 'argument': truncation from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\c
vector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(135,28): warning C4
267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(137,20): warning C4
244: 'initializing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\
llama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(234,24): warning C4
267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(346,73): warning C4
267: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(359,71): warning C4
267: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\cvector-generator\llama-cvector-generator.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\cvector-generator\cvector-generator.cpp(456,29): warning C4
267: '=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\cvector-generator\llama-cvector-generator.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\eval-callback\llama-eval-callback.vcxproj" (default ta
rget) (22) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\eval-callback\eval-callback.cpp(137,73): warning C4267: 'ar
gument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\eval-callback\llama-eval-callback.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\export-lora\llama-export-lora.vcxproj" (default target
) (23) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\export-lora\export-lora.cpp(22,12): warning C4244: 'initial
izing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\export-lora\llama-export-lora.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\export-lora\export-lora.cpp(27,12): warning C4244: 'initial
izing': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\export-lora\llama-export-lora.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj" (default target) (24)
->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\gemma3-cli.cpp(199,43): warning C4267: '+=': conversi
on from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\llava\llama-gemma3-cli.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\gemma3-cli.cpp(208,28): warning C4305: '=': truncatio
n from 'double' to 'float' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxp
roj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj" (default target) (24)
->
(Link target) ->
  LINK : warning LNK4217: symbol '?mtmd_init_from_file@@YAPEAUmtmd_context@@PEBDPEBUllama_model@@Umtmd_context_params@@
@Z (struct mtmd_context * __cdecl mtmd_init_from_file(char const *,struct llama_model const *,struct mtmd_context_param
s))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"public: __cdecl gemma3_context::gemma3_context
(struct common_params &)" (??0gemma3_context@@QEAA@AEAUcommon_params@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llam
a.cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
  LINK : warning LNK4217: symbol '?mtmd_free@@YAXPEAUmtmd_context@@@Z (void __cdecl mtmd_free(struct mtmd_context *))'
defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"public: __cdecl gemma3_context::gemma3_context(stru
ct common_params &)" (??0gemma3_context@@QEAA@AEAUcommon_params@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\llava\llama-gemma3-cli.vcxproj]
  LINK : warning LNK4217: symbol '?mtmd_tokenize@@YAHPEAUmtmd_context@@AEAV?$vector@Umtmd_input_chunk@@V?$allocator@Umt
md_input_chunk@@@std@@@std@@AEBUmtmd_input_text@@AEBV?$vector@Umtmd_bitmap@@V?$allocator@Umtmd_bitmap@@@std@@@3@@Z (int
 __cdecl mtmd_tokenize(struct mtmd_context *,class std::vector<struct mtmd_input_chunk,class std::allocator<struct mtmd
_input_chunk> > &,struct mtmd_input_text const &,class std::vector<struct mtmd_bitmap,class std::allocator<struct mtmd_
bitmap> > const &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"int __cdecl eval_message(struc
t gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic_string<char,struct std::char_traits<char
>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class st
d::allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat_msg@@AEAV?$vector@V?$basic_str
ing@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@
@std@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
  LINK : warning LNK4217: symbol '?mtmd_helper_get_n_tokens@@YA_KAEAV?$vector@Umtmd_input_chunk@@V?$allocator@Umtmd_inp
ut_chunk@@@std@@@std@@@Z (unsigned __int64 __cdecl mtmd_helper_get_n_tokens(class std::vector<struct mtmd_input_chunk,c
lass std::allocator<struct mtmd_input_chunk> > &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '
"int __cdecl eval_message(struct gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic_string<ch
ar,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<char,struct
std::char_traits<char>,class std::allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat
_msg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_
traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\l
lava\llama-gemma3-cli.vcxproj]
  LINK : warning LNK4217: symbol '?mtmd_helper_eval@@YAHPEAUmtmd_context@@PEAUllama_context@@AEAV?$vector@Umtmd_input_c
hunk@@V?$allocator@Umtmd_input_chunk@@@std@@@std@@HHH@Z (int __cdecl mtmd_helper_eval(struct mtmd_context *,struct llam
a_context *,class std::vector<struct mtmd_input_chunk,class std::allocator<struct mtmd_input_chunk> > &,int,int,int))'
defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in function '"int __cdecl eval_message(struct gemma3_context &,st
ruct common_chat_msg &,class std::vector<class std::basic_string<char,struct std::char_traits<char>,class std::allocato
r<char> >,class std::allocator<class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >
> > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUcommon_chat_msg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D
@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)'
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-gemma3-cli.vcxproj]
  LINK : warning LNK4217: symbol '?mtmd_helper_bitmap_init_from_file@@YAHPEBDAEAUmtmd_bitmap@@@Z (int __cdecl mtmd_help
er_bitmap_init_from_file(char const *,struct mtmd_bitmap &))' defined in 'mtmd.obj' is imported by 'gemma3-cli.obj' in
function '"int __cdecl eval_message(struct gemma3_context &,struct common_chat_msg &,class std::vector<class std::basic
_string<char,struct std::char_traits<char>,class std::allocator<char> >,class std::allocator<class std::basic_string<ch
ar,struct std::char_traits<char>,class std::allocator<char> > > > &,bool)" (?eval_message@@YAHAEAUgemma3_context@@AEAUc
ommon_chat_msg@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string
@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@_N@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\llava\llama-gemma3-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf\llama-gguf.vcxproj" (default target) (26) ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(68,31): warning C4244: '=': conversion from '
int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf\llama-gguf
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(105,39): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(105,24): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(120,41): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(120,26): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(131,49): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(131,29): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(166,39): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(166,24): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(179,49): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(179,29): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(194,49): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
guf\llama-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf\gguf.cpp(194,29): warning C4244: 'initializing': conve
rsion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gguf\llama-gguf.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-hash\llama-gguf-hash.vcxproj" (default target) (2
7) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(330,45): warning C4244: 'initializi
ng': conversion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gguf-hash\llama-gguf-hash.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(330,25): warning C4244: 'initializi
ng': conversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\
build\examples\gguf-hash\llama-gguf-hash.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(384,55): warning C4267: 'argument':
 conversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gguf-hash\llama-gguf-hash.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(413,80): warning C4267: 'argument':
 conversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gguf-hash\llama-gguf-hash.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-hash\gguf-hash.cpp(454,78): warning C4267: 'argument':
 conversion from 'size_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\gguf-hash\llama-gguf-hash.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gguf-split\llama-gguf-split.vcxproj" (default target)
(28) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(215,18): warning C4244: 'initiali
zing': conversion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cp
p\build\examples\gguf-split\llama-gguf-split.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(268,68): warning C4267: 'argument
': conversion from 'size_t' to 'uint16_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\gguf-split\llama-gguf-split.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(308,21): warning C4267: 'initiali
zing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\gguf-split\llama-gguf-split.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(382,17): warning C4267: 'initiali
zing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\gguf-split\llama-gguf-split.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gguf-split\gguf-split.cpp(494,26): warning C4244: '+=': con
version from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\gguf-split\llama-gguf-split.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\gritlm\llama-gritlm.vcxproj" (default target) (29) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(25,43): warning C4267: 'initializing': co
nversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(25,30): warning C4267: 'initializing': co
nversion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\gritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(32,85): warning C4267: 'initializing': co
nversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\gritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(32,30): warning C4267: 'initializing': co
nversion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\buil
d\examples\gritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(79,66): warning C4244: 'argument': conver
sion from 'uint64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\g
ritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(117,49): warning C4267: 'initializing': c
onversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\gritlm\llama-gritlm.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\gritlm\gritlm.cpp(117,36): warning C4267: 'initializing': c
onversion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\gritlm\llama-gritlm.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj" (default target) (32) -
>
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\llava-cli.cpp(95,105): warning C4267: 'argument': con
version from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\
llava\llama-llava-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj" (default target) (32) -
>
(Link target) ->
  LINK : warning LNK4217: symbol 'clip_model_load' defined in 'clip.obj' is imported by 'llava-cli.obj' in function '"s
truct llava_context * __cdecl llava_init_context(struct common_params *,struct llama_model *)" (?llava_init_context@@YA
PEAUllava_context@@PEAUcommon_params@@PEAUllama_model@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\llava\llama-llava-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'llava-cli.obj' in function '"void __
cdecl llava_free(struct llava_context *)" (?llava_free@@YAXPEAUllava_context@@@Z)' [D:\NEURAL_CORE\auryn_core\dependenc
ies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_make_with_bytes' defined in 'llava.obj' is imported by 'llava-cli.o
bj' in function '"struct llava_image_embed * __cdecl llava_image_embed_make_with_prompt_base64(struct clip_ctx *,int,cl
ass std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?llava_image_embed_mak
e_with_prompt_base64@@YAPEAUllava_image_embed@@PEAUclip_ctx@@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@
2@@std@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'llava-cl
i.obj' in function '"struct llava_image_embed * __cdecl load_image(struct llava_context *,struct common_params *,class
std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?load_image@@YAPEAUllava_i
mage_embed@@PEAUllava_context@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)'
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'llava-cli.obj' in func
tion 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_eval_image_embed' defined in 'llava.obj' is imported by 'llava-cli.obj' in func
tion '"void __cdecl process_prompt(struct llava_context *,struct llava_image_embed *,struct common_params *,class std::
basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?process_prompt@@YAXPEAUllava_c
ontext@@PEAUllava_image_embed@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z)'
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-clip-quantize-cli.vcxproj" (default
target) (33) ->
  LINK : warning LNK4217: symbol 'clip_model_quantize' defined in 'clip.obj' is imported by 'clip-quantize-cli.obj' in
function 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-llava-clip-quantize-cli.vc
xproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookahead\llama-lookahead.vcxproj" (default target) (3
4) ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(90,33): warning C4267: 'initializin
g': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\lookahead\llama-lookahead.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(90,23): warning C4267: 'initializin
g': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\lookahead\llama-lookahead.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(107,16): warning C4267: 'initializi
ng': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\lookahead\llama-lookahead.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookahead\lookahead.cpp(364,115): warning C4267: 'argument'
: conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\lookahead\llama-lookahead.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup.vcxproj" (default target) (35) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(54,103): warning C4267: 'argument': conve
rsion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lo
okup\llama-lookup.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(90,33): warning C4267: 'initializing': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\lookup\llama-lookup.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(90,23): warning C4267: 'initializing': co
nversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\lookup\llama-lookup.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(103,16): warning C4267: 'initializing': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\lookup\llama-lookup.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(208,58): warning C4267: 'argument': conve
rsion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\lookup\llama-lookup.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup.cpp(212,35): warning C4267: '+=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\l
lama-lookup.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-create.vcxproj" (default target) (
36) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-create.cpp(34,97): warning C4267: 'argument':
 conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\lookup\llama-lookup-create.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\lookup\llama-lookup-stats.vcxproj" (default target) (3
8) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(67,33): warning C4267: 'initializin
g': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\lookup\llama-lookup-stats.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(67,23): warning C4267: 'initializin
g': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\lookup\llama-lookup-stats.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\lookup\lookup-stats.cpp(93,39): warning C4267: '+=': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\loo
kup\llama-lookup-stats.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj" (default target) (39
) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\minicpmv-cli.cpp(229,27): warning C4244: 'initializin
g': conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\llava\llama-minicpmv-cli.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\minicpmv-cli.cpp(235,30): warning C4244: 'initializin
g': conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\llava\llama-minicpmv-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj" (default target) (39
) ->
(Link target) ->
  LINK : warning LNK4217: symbol 'clip_init' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '"stru
ct llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<char,struct std::char_traits<ch
ar>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAUcommon_params@@AEBV?$basic_s
tring@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ex
amples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function 'main'
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_embd_nbytes' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function
 '"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?proc
ess_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\l
lama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_n_patches' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function '
"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?proces
s_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\lla
ma.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_n_mmproj_embd' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in functi
on '"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)" (?pr
ocess_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_uhd_num_image_embeds_col' defined in 'clip.obj' is imported by 'minicpmv-cli.obj
' in function '"void __cdecl process_image(struct llava_context *,struct llava_image_embed *,struct common_params *,int
 &)" (?process_image@@YAXPEAUllava_context@@PEAUllava_image_embed@@PEAUcommon_params@@AEAH@Z)' [D:\NEURAL_CORE\auryn_co
re\dependencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_is_minicpmv' defined in 'clip.obj' is imported by 'minicpmv-cli.obj' in function
 '"void __cdecl process_image(struct llava_context *,struct llava_image_embed *,struct common_params *,int &)" (?proces
s_image@@YAXPEAUllava_context@@PEAUllava_image_embed@@PEAUcommon_params@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependenci
es\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'minicpmv
-cli.obj' in function '"struct llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<cha
r,struct std::char_traits<char>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAU
common_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dep
endencies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'minicpmv-cli.obj' in f
unction '"struct llava_context * __cdecl minicpmv_init(struct common_params *,class std::basic_string<char,struct std::
char_traits<char>,class std::allocator<char> > const &,int &)" (?minicpmv_init@@YAPEAUllava_context@@PEAUcommon_params@
@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAH@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llam
a.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_eval_image_embed' defined in 'llava.obj' is imported by 'minicpmv-cli.obj' in f
unction '"void __cdecl process_eval_image_embed(struct llava_context *,struct llava_image_embed const *,int,int *,int)"
 (?process_eval_image_embed@@YAXPEAUllava_context@@PEBUllava_image_embed@@HPEAHH@Z)' [D:\NEURAL_CORE\auryn_core\depende
ncies\llama.cpp\build\examples\llava\llama-minicpmv-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\parallel\llama-parallel.vcxproj" (default target) (40)
 ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(167,21): warning C4267: '=': conversi
on from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\p
arallel\llama-parallel.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(173,55): warning C4267: 'initializing
': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\parallel\llama-parallel.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(173,35): warning C4267: 'initializing
': conversion from 'size_t' to 'const int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\parallel\llama-parallel.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(267,69): warning C4267: 'argument': c
onversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\parallel\llama-parallel.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\parallel\parallel.cpp(275,58): warning C4267: '=': conversi
on from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\p
arallel\llama-parallel.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\passkey\llama-passkey.vcxproj" (default target) (41) -
>
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(101,79): warning C4267: 'initializing':
 conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\passkey\llama-passkey.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(101,31): warning C4267: 'initializing':
 conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\passkey\llama-passkey.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(103,46): warning C4267: 'initializing':
 conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\passkey\llama-passkey.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\passkey\passkey.cpp(103,28): warning C4267: 'initializing':
 conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\examples\passkey\llama-passkey.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj" (default target) (45)
 ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\llava\qwen2vl-cli.cpp(180,105): warning C4267: 'argument':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\llava\llama-qwen2vl-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj" (default target) (45)
 ->
(Link target) ->
  LINK : warning LNK4217: symbol 'clip_model_load' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in function '
"struct llava_context * __cdecl llava_init_context(struct common_params *,struct llama_model *)" (?llava_init_context@@
YAPEAUllava_context@@PEAUcommon_params@@PEAUllama_model@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\llava\llama-qwen2vl-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_free' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in function '"void
__cdecl llava_free(struct llava_context *)" (?llava_free@@YAXPEAUllava_context@@@Z)' [D:\NEURAL_CORE\auryn_core\depende
ncies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
  LINK : warning LNK4217: symbol 'clip_get_load_image_size' defined in 'clip.obj' is imported by 'qwen2vl-cli.obj' in f
unction '"void __cdecl process_prompt(struct llava_context *,struct llava_image_embed *,struct common_params *,class st
d::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?process_prompt@@YAXPEAUllav
a_context@@PEAUllava_image_embed@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@
Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_make_with_bytes' defined in 'llava.obj' is imported by 'qwen2vl-cli
.obj' in function '"struct llava_image_embed * __cdecl llava_image_embed_make_with_prompt_base64(struct clip_ctx *,int,
class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?llava_image_embed_m
ake_with_prompt_base64@@YAPEAUllava_image_embed@@PEAUclip_ctx@@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@
D@2@@std@@@Z)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_make_with_filename' defined in 'llava.obj' is imported by 'qwen2vl-
cli.obj' in function '"struct llava_image_embed * __cdecl load_image(struct llava_context *,struct common_params *,clas
s std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)" (?load_image@@YAPEAUllava
_image_embed@@PEAUllava_context@@PEAUcommon_params@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
)' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]
  LINK : warning LNK4217: symbol 'llava_image_embed_free' defined in 'llava.obj' is imported by 'qwen2vl-cli.obj' in fu
nction 'main' [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\llava\llama-qwen2vl-cli.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\retrieval\llama-retrieval.vcxproj" (default target) (4
6) ->
(ClCompile target) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(80,44): warning C4267: 'argument':
conversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\retrieval\llama-retrieval.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(216,37): warning C4267: 'initializi
ng': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\e
xamples\retrieval\llama-retrieval.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(216,24): warning C4267: 'initializi
ng': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\retrieval\llama-retrieval.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(217,49): warning C4244: 'argument':
 conversion from 'const uint64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\retrieval\llama-retrieval.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\retrieval\retrieval.cpp(258,55): warning C4244: 'argument':
 conversion from 'const uint64_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\retrieval\llama-retrieval.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-run.vcxproj" (default target) (47) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(131,33): warning C4244: '=': conversion from 'd
ouble' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-run
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(919,23): warning C4267: 'return': conversion fr
om 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\llama-
run.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(927,83): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\
llama-run.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(929,102): warning C4267: 'argument': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run
\llama-run.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(929,58): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\
llama-run.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\run\run.cpp(980,71): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\run\
llama-run.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\save-load-state\llama-save-load-state.vcxproj" (defaul
t target) (48) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\save-load-state\save-load-state.cpp(51,53): warning C4267:
'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.
cpp\build\examples\save-load-state\llama-save-load-state.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\save-load-state\save-load-state.cpp(53,44): warning C4267:
'argument': conversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llam
a.cpp\build\examples\save-load-state\llama-save-load-state.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj" (default target) (49) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267: 'argument': conver
sion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(343,63): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267: 'argument': conver
sion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,96): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267: 'argument': conver
sion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         with [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         [ [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:             _Ty=int
[D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(344,63): warning C4267:         ] [D:\NEURAL
_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267: 'argument': conve
rsion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(349,112): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(394,16): warning C4267: 'initializing': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(405,52): warning C4267: '=': conversion fr
om 'size_t' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server
\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(426,48): warning C4267: '=': conversion fr
om 'size_t' to 'uint8_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server
\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\utils.hpp(896,17): warning C4267: 'initializing': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1515,48): warning C4244: '+=': conversion
 from 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1516,48): warning C4244: '+=': conversion
 from 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1522,43): warning C4244: '+=': conversion
 from 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(1523,43): warning C4244: '+=': conversion
 from 'const double' to 'uint64_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examp
les\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2055,33): warning C4267: 'initializing':
conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2390,28): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2421,36): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2467,30): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2510,26): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2709,85): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2977,66): warning C4267: '=': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serv
er\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267: 'argument': conv
ersion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:             _Ty=in
t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(2985,85): warning C4267:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3052,74): warning C4267: '=': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serv
er\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3061,57): warning C4267: '=': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\serv
er\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3089,89): warning C4267: 'argument': conv
ersion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3089,81): warning C4267: 'argument': conv
ersion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,107): warning C4244: 'argument': con
version from 'const int64_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,96): warning C4267: 'argument': conv
ersion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3090,81): warning C4267: 'argument': conv
ersion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3343,49): warning C4267: '+=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ser
ver\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3357,81): warning C4267: 'argument': conv
ersion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exam
ples\server\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3367,43): warning C4267: '+=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ser
ver\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3368,43): warning C4267: '+=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ser
ver\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3371,53): warning C4267: '+=': conversion
 from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\ser
ver\llama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(3969,30): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(4293,38): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\server\server.cpp(4393,38): warning C4267: '=': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\server\l
lama-server.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple\llama-simple.vcxproj" (default target) (50) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(97,76): warning C4267: 'argument': conver
sion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\simple\llama-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(101,102): warning C4267: 'argument': conv
ersion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\simple\llama-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(101,58): warning C4267: 'argument': conve
rsion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\simple\llama-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple\simple.cpp(146,85): warning C4267: 'argument': conve
rsion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\simple\llama-simple.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj" (default target
) (51) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(104,87): warning C4267: 'argume
nt': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(106,106): warning C4267: 'argum
ent': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(106,62): warning C4267: 'argume
nt': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(111,89): warning C4267: 'argume
nt': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(170,127): warning C4267: 'argum
ent': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(173,127): warning C4267: 'argum
ent': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bu
ild\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(169,37): warning C4996: 'strdup
': The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help
 for details. [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\simple-chat\simple-chat.cpp(189,42): warning C4996: 'strdup
': The POSIX name for this item is deprecated. Instead, use the ISO C and C++ conformant name: _strdup. See online help
 for details. [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\simple-chat\llama-simple-chat.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj" (default target
) (52) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(164,33): warning C4267: 'initia
lizing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\speculative\llama-speculative.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(164,23): warning C4267: 'initia
lizing': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.c
pp\build\examples\speculative\llama-speculative.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(185,20): warning C4267: 'initia
lizing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\speculative\llama-speculative.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(186,20): warning C4267: 'initia
lizing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\speculative\llama-speculative.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267: 'argum
ent': conversion from 'size_t' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\
examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
with [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
[ [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
    _Ty=unsigned int [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcx
proj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(250,102): warning C4267:
] [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative\llama-speculative.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative\speculative.cpp(267,33): warning C4244: 'initia
lizing': conversion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\b
uild\examples\speculative\llama-speculative.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj" (
default target) (53) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(116,70): warning
C4267: 'argument': conversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(125,16): warning
C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(165,62): warning
C4267: 'argument': conversion from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependenci
es\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(186,33): warning
C4267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(187,32): warning
C4267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(188,33): warning
C4267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(189,30): warning
C4267: '+=': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp
\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(230,33): warning
C4267: 'initializing': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies
\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\speculative-simple\speculative-simple.cpp(230,23): warning
C4267: 'initializing': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\depend
encies\llama.cpp\build\examples\speculative-simple\llama-speculative-simple.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tokenize\llama-tokenize.vcxproj" (default target) (54)
 ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(97,77): warning C4267: 'argument': co
nversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples
\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(101,57): warning C4267: 'argument': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(153,91): warning C4267: 'argument': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(158,25): warning C4267: 'initializing
': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(175,52): warning C4267: 'argument': c
onversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\example
s\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(188,31): warning C4267: 'initializing
': conversion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exa
mples\tokenize\llama-tokenize.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tokenize\tokenize.cpp(188,20): warning C4267: 'initializing
': conversion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\bui
ld\examples\tokenize\llama-tokenize.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxproj" (default target) (55) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(40,41): warning C4244: '=': conversion from 'do
uble' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(101,36): warning C4267: '=': conversion from 's
ize_t' to 'uint32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-
tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(120,56): warning C4244: 'argument': conversion
from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\ll
ama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(120,25): warning C4244: '=': conversion from 'd
ouble' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts
.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(126,17): warning C4244: 'initializing': convers
ion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tt
s\llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(212,31): warning C4267: 'argument': conversion
from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llam
a-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(357,36): warning C4101: 'e': unreferenced local
 variable [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(826,54): warning C4267: 'argument': conversion
from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts\
llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(835,52): warning C4267: 'argument': conversion
from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tt
s\llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1014,35): warning C4267: 'initializing': conver
sion from 'size_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\tts
\llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1014,23): warning C4267: 'initializing': conver
sion from 'size_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\exampl
es\tts\llama-tts.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\examples\tts\tts.cpp(1019,43): warning C4267: 'argument': conversion
 from 'size_t' to 'llama_pos', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\examples\t
ts\llama-tts.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj" (default target) (62) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244: 'argument': conve
rsion from 'uint64_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tes
ts\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(664,95): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267: 'argument': conve
rsion from 'size_t' to 'const _Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:             _Ty=int
 [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(671,94): warning C4267:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(736,38): warning C4244: 'argument': conve
rsion from 'uint64_t' to 'double', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244: '=': conversion f
rom 'double' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend
-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         with [D:\NE
URAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         [ [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:             _Ty=flo
at [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(950,93): warning C4244:         ] [D:\NEURA
L_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244: '=': conversion
from 'int' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-o
ps.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:             _Ty=fl
oat [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1248,35): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,75): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,63): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1413,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244: 'argument': con
version from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         with [D:\
NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         [ [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:             _Ty=i
nt64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,103): warning C4244:         ] [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,71): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1505,55): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244: 'argument': con
version from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         with [D:\
NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         [ [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:             _Ty=i
nt64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,103): warning C4244:         ] [D:\NEU
RAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,87): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,71): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1513,55): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(1935,75): warning C4244: 'argument': conv
ersion from 'double' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\te
st-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,67): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,59): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2038,43): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,67): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,59): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,51): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2039,43): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244: 'initializing':
conversion from '_Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\tes
t-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,47): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244: 'initializing':
conversion from '_Ty' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tes
ts\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2619,39): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2677,85): warning C4244: 'argument': conv
ersion from 'const int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2677,81): warning C4244: 'argument': conv
ersion from 'const int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244: '=': conversion
from 'int' to '_Ty', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-o
ps.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:             _Ty=fl
oat [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2858,35): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244: 'argument': conv
ersion from '_Ty' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-
backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(2895,46): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,94): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,83): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,73): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244: 'argument': conv
ersion from 'const _Ty' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:             _Ty=in
t64_t [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3007,62): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(3299,77): warning C4244: 'argument': conv
ersion from 'const int64_t' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\t
ests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244: 'initializing':
conversion from 'const _Elem' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build
\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         with [D:\N
EURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         [ [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:             _Elem=
int [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4361,32): warning C4244:         ] [D:\NEUR
AL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4367,124): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4370,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4371,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4372,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4376,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4377,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4378,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4379,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4380,128): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4384,148): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4385,148): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4386,148): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-backend-ops.cpp(4389,124): warning C4244: 'argument': con
version from 'float' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-backend-ops.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-chat-template.vcxproj" (default target) (65) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-chat-template.cpp(309,147): warning C4267: 'argument': co
nversion from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\test
s\test-chat-template.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-chat-template.cpp(322,32): warning C4267: 'argument': con
version from 'size_t' to 'int32_t', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests
\test-chat-template.vcxproj]


"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\ALL_BUILD.vcxproj" (default target) (1) ->
"D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj" (default target) (66) ->
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(385,19): warning C4319: '~': zero extending 'uin
t32_t' to 'size_t' of greater size [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(475,37): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gg
uf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(475,22): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(578,43): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gg
uf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(578,28): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(587,40): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gg
uf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(587,22): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(612,28): warning C4319: '~': zero extending 'uin
t32_t' to 'size_t' of greater size [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(643,9): warning C4267: 'argument': conversion fr
om 'size_t' to 'long', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gguf.vc
xproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(820,96): warning C4244: 'argument': conversion f
rom 'unsigned int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(825,96): warning C4244: 'argument': conversion f
rom 'unsigned int' to 'float', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test
-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(922,35): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gg
uf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(922,20): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(926,44): warning C4244: 'initializing': conversi
on from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-gg
uf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(926,29): warning C4244: 'initializing': conversi
on from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\t
est-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1003,45): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-g
guf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1003,25): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-gguf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1007,47): warning C4244: 'initializing': convers
ion from 'int64_t' to 'int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\test-g
guf.vcxproj]
  D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\tests\test-gguf.cpp(1007,29): warning C4244: 'initializing': convers
ion from 'int64_t' to 'const int', possible loss of data [D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build\tests\
test-gguf.vcxproj]

    835 Warning(s)
    0 Error(s)

Time Elapsed 00:36:01.07


D:\NEURAL_CORE\auryn_core\dependencies\llama.cpp\build>